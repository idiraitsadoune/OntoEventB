/*
 * generated by Xtext 2.25.0
 */
grammar InternalDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.cs.ontoeventb.pivotmodel.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.cs.ontoeventb.pivotmodel.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.cs.ontoeventb.pivotmodel.services.DSLGrammarAccess;

}

@parser::members {

 	private DSLGrammarAccess grammarAccess;

    public InternalDSLParser(TokenStream input, DSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Ontology";
   	}

   	@Override
   	protected DSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleOntology
entryRuleOntology returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOntologyRule()); }
	iv_ruleOntology=ruleOntology
	{ $current=$iv_ruleOntology.current; }
	EOF;

// Rule Ontology
ruleOntology returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOntologyAccess().getOntologyAction_0(),
					$current);
			}
		)
		otherlv_1='Ontology'
		{
			newLeafNode(otherlv_1, grammarAccess.getOntologyAccess().getOntologyKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOntologyAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOntologyRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getOntologyAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='containedClasses'
			{
				newLeafNode(otherlv_4, grammarAccess.getOntologyAccess().getContainedClassesKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getOntologyAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOntologyAccess().getContainedClassesClassDefinitionParserRuleCall_4_2_0());
					}
					lv_containedClasses_6_0=ruleClassDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOntologyRule());
						}
						add(
							$current,
							"containedClasses",
							lv_containedClasses_6_0,
							"fr.cs.ontoeventb.pivotmodel.DSL.ClassDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getOntologyAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOntologyAccess().getContainedClassesClassDefinitionParserRuleCall_4_3_1_0());
						}
						lv_containedClasses_8_0=ruleClassDefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOntologyRule());
							}
							add(
								$current,
								"containedClasses",
								lv_containedClasses_8_0,
								"fr.cs.ontoeventb.pivotmodel.DSL.ClassDefinition");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getOntologyAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			otherlv_10='containedProperties'
			{
				newLeafNode(otherlv_10, grammarAccess.getOntologyAccess().getContainedPropertiesKeyword_5_0());
			}
			otherlv_11='{'
			{
				newLeafNode(otherlv_11, grammarAccess.getOntologyAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOntologyAccess().getContainedPropertiesPropertyDefinitionParserRuleCall_5_2_0());
					}
					lv_containedProperties_12_0=rulePropertyDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOntologyRule());
						}
						add(
							$current,
							"containedProperties",
							lv_containedProperties_12_0,
							"fr.cs.ontoeventb.pivotmodel.DSL.PropertyDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getOntologyAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOntologyAccess().getContainedPropertiesPropertyDefinitionParserRuleCall_5_3_1_0());
						}
						lv_containedProperties_14_0=rulePropertyDefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOntologyRule());
							}
							add(
								$current,
								"containedProperties",
								lv_containedProperties_14_0,
								"fr.cs.ontoeventb.pivotmodel.DSL.PropertyDefinition");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_15='}'
			{
				newLeafNode(otherlv_15, grammarAccess.getOntologyAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		(
			otherlv_16='containedDataTypes'
			{
				newLeafNode(otherlv_16, grammarAccess.getOntologyAccess().getContainedDataTypesKeyword_6_0());
			}
			otherlv_17='{'
			{
				newLeafNode(otherlv_17, grammarAccess.getOntologyAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOntologyAccess().getContainedDataTypesDataTypeDefinitionParserRuleCall_6_2_0());
					}
					lv_containedDataTypes_18_0=ruleDataTypeDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOntologyRule());
						}
						add(
							$current,
							"containedDataTypes",
							lv_containedDataTypes_18_0,
							"fr.cs.ontoeventb.pivotmodel.DSL.DataTypeDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_19=','
				{
					newLeafNode(otherlv_19, grammarAccess.getOntologyAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOntologyAccess().getContainedDataTypesDataTypeDefinitionParserRuleCall_6_3_1_0());
						}
						lv_containedDataTypes_20_0=ruleDataTypeDefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOntologyRule());
							}
							add(
								$current,
								"containedDataTypes",
								lv_containedDataTypes_20_0,
								"fr.cs.ontoeventb.pivotmodel.DSL.DataTypeDefinition");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_21='}'
			{
				newLeafNode(otherlv_21, grammarAccess.getOntologyAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		otherlv_22='}'
		{
			newLeafNode(otherlv_22, grammarAccess.getOntologyAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleClassDefinition
entryRuleClassDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassDefinitionRule()); }
	iv_ruleClassDefinition=ruleClassDefinition
	{ $current=$iv_ruleClassDefinition.current; }
	EOF;

// Rule ClassDefinition
ruleClassDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getClassDefinitionAccess().getSimpleClassParserRuleCall_0());
		}
		this_SimpleClass_0=ruleSimpleClass
		{
			$current = $this_SimpleClass_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getClassDefinitionAccess().getCaseOfClassParserRuleCall_1());
		}
		this_CaseOfClass_1=ruleCaseOfClass
		{
			$current = $this_CaseOfClass_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getClassDefinitionAccess().getUniversalClassParserRuleCall_2());
		}
		this_UniversalClass_2=ruleUniversalClass
		{
			$current = $this_UniversalClass_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getClassDefinitionAccess().getExistantialClassParserRuleCall_3());
		}
		this_ExistantialClass_3=ruleExistantialClass
		{
			$current = $this_ExistantialClass_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getClassDefinitionAccess().getHasValueClassParserRuleCall_4());
		}
		this_HasValueClass_4=ruleHasValueClass
		{
			$current = $this_HasValueClass_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getClassDefinitionAccess().getMaxCardinalityClassParserRuleCall_5());
		}
		this_MaxCardinalityClass_5=ruleMaxCardinalityClass
		{
			$current = $this_MaxCardinalityClass_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getClassDefinitionAccess().getMinCardinalityClassParserRuleCall_6());
		}
		this_MinCardinalityClass_6=ruleMinCardinalityClass
		{
			$current = $this_MinCardinalityClass_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getClassDefinitionAccess().getCardinalityClassParserRuleCall_7());
		}
		this_CardinalityClass_7=ruleCardinalityClass
		{
			$current = $this_CardinalityClass_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getClassDefinitionAccess().getEnumeratedClassParserRuleCall_8());
		}
		this_EnumeratedClass_8=ruleEnumeratedClass
		{
			$current = $this_EnumeratedClass_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getClassDefinitionAccess().getUnionClassParserRuleCall_9());
		}
		this_UnionClass_9=ruleUnionClass
		{
			$current = $this_UnionClass_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getClassDefinitionAccess().getIntersectionClassParserRuleCall_10());
		}
		this_IntersectionClass_10=ruleIntersectionClass
		{
			$current = $this_IntersectionClass_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getClassDefinitionAccess().getComplementClassParserRuleCall_11());
		}
		this_ComplementClass_11=ruleComplementClass
		{
			$current = $this_ComplementClass_11.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePropertyDefinition
entryRulePropertyDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyDefinitionRule()); }
	iv_rulePropertyDefinition=rulePropertyDefinition
	{ $current=$iv_rulePropertyDefinition.current; }
	EOF;

// Rule PropertyDefinition
rulePropertyDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPropertyDefinitionAccess().getSimplePropertyParserRuleCall_0());
		}
		this_SimpleProperty_0=ruleSimpleProperty
		{
			$current = $this_SimpleProperty_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyDefinitionAccess().getConditionPropertyParserRuleCall_1());
		}
		this_ConditionProperty_1=ruleConditionProperty
		{
			$current = $this_ConditionProperty_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyDefinitionAccess().getDependentPropertyParserRuleCall_2());
		}
		this_DependentProperty_2=ruleDependentProperty
		{
			$current = $this_DependentProperty_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDataTypeDefinition
entryRuleDataTypeDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeDefinitionRule()); }
	iv_ruleDataTypeDefinition=ruleDataTypeDefinition
	{ $current=$iv_ruleDataTypeDefinition.current; }
	EOF;

// Rule DataTypeDefinition
ruleDataTypeDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDataTypeDefinitionAccess().getNotNumericTypeParserRuleCall_0());
		}
		this_NotNumericType_0=ruleNotNumericType
		{
			$current = $this_NotNumericType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeDefinitionAccess().getNumericType_ImplParserRuleCall_1());
		}
		this_NumericType_Impl_1=ruleNumericType_Impl
		{
			$current = $this_NumericType_Impl_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeDefinitionAccess().getMeasureTypeParserRuleCall_2());
		}
		this_MeasureType_2=ruleMeasureType
		{
			$current = $this_MeasureType_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeDefinitionAccess().getCurrencyTypeParserRuleCall_3());
		}
		this_CurrencyType_3=ruleCurrencyType
		{
			$current = $this_CurrencyType_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeDefinitionAccess().getClassTypeParserRuleCall_4());
		}
		this_ClassType_4=ruleClassType
		{
			$current = $this_ClassType_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeDefinitionAccess().getCollectionTypeParserRuleCall_5());
		}
		this_CollectionType_5=ruleCollectionType
		{
			$current = $this_CollectionType_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeDefinitionAccess().getSingleValueParserRuleCall_6());
		}
		this_SingleValue_6=ruleSingleValue
		{
			$current = $this_SingleValue_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeDefinitionAccess().getEnumeratedTypeParserRuleCall_7());
		}
		this_EnumeratedType_7=ruleEnumeratedType
		{
			$current = $this_EnumeratedType_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeDefinitionAccess().getNumberEnumeratedTypeParserRuleCall_8());
		}
		this_NumberEnumeratedType_8=ruleNumberEnumeratedType
		{
			$current = $this_NumberEnumeratedType_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUnitType
entryRuleUnitType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitTypeRule()); }
	iv_ruleUnitType=ruleUnitType
	{ $current=$iv_ruleUnitType.current; }
	EOF;

// Rule UnitType
ruleUnitType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnitTypeAccess().getNamedUnit_ImplParserRuleCall_0());
		}
		this_NamedUnit_Impl_0=ruleNamedUnit_Impl
		{
			$current = $this_NamedUnit_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitTypeAccess().getDerivedUnitParserRuleCall_1());
		}
		this_DerivedUnit_1=ruleDerivedUnit
		{
			$current = $this_DerivedUnit_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitTypeAccess().getNonStandardUnitParserRuleCall_2());
		}
		this_NonStandardUnit_2=ruleNonStandardUnit
		{
			$current = $this_NonStandardUnit_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitTypeAccess().getConversionBasedUnitParserRuleCall_3());
		}
		this_ConversionBasedUnit_3=ruleConversionBasedUnit
		{
			$current = $this_ConversionBasedUnit_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitTypeAccess().getContextDependentUnitParserRuleCall_4());
		}
		this_ContextDependentUnit_4=ruleContextDependentUnit
		{
			$current = $this_ContextDependentUnit_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitTypeAccess().getStandardUnitParserRuleCall_5());
		}
		this_StandardUnit_5=ruleStandardUnit
		{
			$current = $this_StandardUnit_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleSimpleClass
entryRuleSimpleClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleClassRule()); }
	iv_ruleSimpleClass=ruleSimpleClass
	{ $current=$iv_ruleSimpleClass.current; }
	EOF;

// Rule SimpleClass
ruleSimpleClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSimpleClassAccess().getSimpleClassAction_0(),
					$current);
			}
		)
		otherlv_1='SimpleClass'
		{
			newLeafNode(otherlv_1, grammarAccess.getSimpleClassAccess().getSimpleClassKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleClassAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleClassRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getSimpleClassAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='subClassOf'
			{
				newLeafNode(otherlv_4, grammarAccess.getSimpleClassAccess().getSubClassOfKeyword_4_0());
			}
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getSimpleClassAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimpleClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSimpleClassAccess().getSubClassOfClassDefinitionCrossReference_4_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getSimpleClassAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSimpleClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getSimpleClassAccess().getSubClassOfClassDefinitionCrossReference_4_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getSimpleClassAccess().getRightParenthesisKeyword_4_4());
			}
		)?
		(
			otherlv_10='disjointWith'
			{
				newLeafNode(otherlv_10, grammarAccess.getSimpleClassAccess().getDisjointWithKeyword_5_0());
			}
			otherlv_11='('
			{
				newLeafNode(otherlv_11, grammarAccess.getSimpleClassAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimpleClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSimpleClassAccess().getDisjointWithClassDefinitionCrossReference_5_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getSimpleClassAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSimpleClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getSimpleClassAccess().getDisjointWithClassDefinitionCrossReference_5_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_15=')'
			{
				newLeafNode(otherlv_15, grammarAccess.getSimpleClassAccess().getRightParenthesisKeyword_5_4());
			}
		)?
		(
			otherlv_16='equivalentTo'
			{
				newLeafNode(otherlv_16, grammarAccess.getSimpleClassAccess().getEquivalentToKeyword_6_0());
			}
			otherlv_17='('
			{
				newLeafNode(otherlv_17, grammarAccess.getSimpleClassAccess().getLeftParenthesisKeyword_6_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimpleClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSimpleClassAccess().getEquivalentToClassDefinitionCrossReference_6_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_19=','
				{
					newLeafNode(otherlv_19, grammarAccess.getSimpleClassAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSimpleClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getSimpleClassAccess().getEquivalentToClassDefinitionCrossReference_6_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_21=')'
			{
				newLeafNode(otherlv_21, grammarAccess.getSimpleClassAccess().getRightParenthesisKeyword_6_4());
			}
		)?
		(
			otherlv_22='describedBy'
			{
				newLeafNode(otherlv_22, grammarAccess.getSimpleClassAccess().getDescribedByKeyword_7_0());
			}
			otherlv_23='('
			{
				newLeafNode(otherlv_23, grammarAccess.getSimpleClassAccess().getLeftParenthesisKeyword_7_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimpleClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSimpleClassAccess().getDescribedByPropertyDefinitionCrossReference_7_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_25=','
				{
					newLeafNode(otherlv_25, grammarAccess.getSimpleClassAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSimpleClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getSimpleClassAccess().getDescribedByPropertyDefinitionCrossReference_7_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_27=')'
			{
				newLeafNode(otherlv_27, grammarAccess.getSimpleClassAccess().getRightParenthesisKeyword_7_4());
			}
		)?
		otherlv_28='}'
		{
			newLeafNode(otherlv_28, grammarAccess.getSimpleClassAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleCaseOfClass
entryRuleCaseOfClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCaseOfClassRule()); }
	iv_ruleCaseOfClass=ruleCaseOfClass
	{ $current=$iv_ruleCaseOfClass.current; }
	EOF;

// Rule CaseOfClass
ruleCaseOfClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CaseOfClass'
		{
			newLeafNode(otherlv_0, grammarAccess.getCaseOfClassAccess().getCaseOfClassKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCaseOfClassAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCaseOfClassRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCaseOfClassAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='subClassOf'
			{
				newLeafNode(otherlv_3, grammarAccess.getCaseOfClassAccess().getSubClassOfKeyword_3_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getCaseOfClassAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaseOfClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getCaseOfClassAccess().getSubClassOfClassDefinitionCrossReference_3_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getCaseOfClassAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCaseOfClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getCaseOfClassAccess().getSubClassOfClassDefinitionCrossReference_3_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getCaseOfClassAccess().getRightParenthesisKeyword_3_4());
			}
		)?
		(
			otherlv_9='disjointWith'
			{
				newLeafNode(otherlv_9, grammarAccess.getCaseOfClassAccess().getDisjointWithKeyword_4_0());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getCaseOfClassAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaseOfClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getCaseOfClassAccess().getDisjointWithClassDefinitionCrossReference_4_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getCaseOfClassAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCaseOfClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getCaseOfClassAccess().getDisjointWithClassDefinitionCrossReference_4_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14=')'
			{
				newLeafNode(otherlv_14, grammarAccess.getCaseOfClassAccess().getRightParenthesisKeyword_4_4());
			}
		)?
		(
			otherlv_15='equivalentTo'
			{
				newLeafNode(otherlv_15, grammarAccess.getCaseOfClassAccess().getEquivalentToKeyword_5_0());
			}
			otherlv_16='('
			{
				newLeafNode(otherlv_16, grammarAccess.getCaseOfClassAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaseOfClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getCaseOfClassAccess().getEquivalentToClassDefinitionCrossReference_5_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_18=','
				{
					newLeafNode(otherlv_18, grammarAccess.getCaseOfClassAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCaseOfClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getCaseOfClassAccess().getEquivalentToClassDefinitionCrossReference_5_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_20=')'
			{
				newLeafNode(otherlv_20, grammarAccess.getCaseOfClassAccess().getRightParenthesisKeyword_5_4());
			}
		)?
		(
			otherlv_21='describedBy'
			{
				newLeafNode(otherlv_21, grammarAccess.getCaseOfClassAccess().getDescribedByKeyword_6_0());
			}
			otherlv_22='('
			{
				newLeafNode(otherlv_22, grammarAccess.getCaseOfClassAccess().getLeftParenthesisKeyword_6_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaseOfClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getCaseOfClassAccess().getDescribedByPropertyDefinitionCrossReference_6_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_24=','
				{
					newLeafNode(otherlv_24, grammarAccess.getCaseOfClassAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCaseOfClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getCaseOfClassAccess().getDescribedByPropertyDefinitionCrossReference_6_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_26=')'
			{
				newLeafNode(otherlv_26, grammarAccess.getCaseOfClassAccess().getRightParenthesisKeyword_6_4());
			}
		)?
		otherlv_27='caseOf'
		{
			newLeafNode(otherlv_27, grammarAccess.getCaseOfClassAccess().getCaseOfKeyword_7());
		}
		otherlv_28='('
		{
			newLeafNode(otherlv_28, grammarAccess.getCaseOfClassAccess().getLeftParenthesisKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCaseOfClassRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getCaseOfClassAccess().getCaseOfClassDefinitionCrossReference_9_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_30=','
			{
				newLeafNode(otherlv_30, grammarAccess.getCaseOfClassAccess().getCommaKeyword_10_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaseOfClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getCaseOfClassAccess().getCaseOfClassDefinitionCrossReference_10_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_32=')'
		{
			newLeafNode(otherlv_32, grammarAccess.getCaseOfClassAccess().getRightParenthesisKeyword_11());
		}
		(
			otherlv_33='importedProperties'
			{
				newLeafNode(otherlv_33, grammarAccess.getCaseOfClassAccess().getImportedPropertiesKeyword_12_0());
			}
			otherlv_34='('
			{
				newLeafNode(otherlv_34, grammarAccess.getCaseOfClassAccess().getLeftParenthesisKeyword_12_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaseOfClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getCaseOfClassAccess().getImportedPropertiesPropertyDefinitionCrossReference_12_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_36=','
				{
					newLeafNode(otherlv_36, grammarAccess.getCaseOfClassAccess().getCommaKeyword_12_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCaseOfClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getCaseOfClassAccess().getImportedPropertiesPropertyDefinitionCrossReference_12_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_38=')'
			{
				newLeafNode(otherlv_38, grammarAccess.getCaseOfClassAccess().getRightParenthesisKeyword_12_4());
			}
		)?
		otherlv_39='}'
		{
			newLeafNode(otherlv_39, grammarAccess.getCaseOfClassAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleUniversalClass
entryRuleUniversalClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUniversalClassRule()); }
	iv_ruleUniversalClass=ruleUniversalClass
	{ $current=$iv_ruleUniversalClass.current; }
	EOF;

// Rule UniversalClass
ruleUniversalClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='UniversalClass'
		{
			newLeafNode(otherlv_0, grammarAccess.getUniversalClassAccess().getUniversalClassKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUniversalClassAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUniversalClassRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getUniversalClassAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='subClassOf'
			{
				newLeafNode(otherlv_3, grammarAccess.getUniversalClassAccess().getSubClassOfKeyword_3_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getUniversalClassAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUniversalClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getUniversalClassAccess().getSubClassOfClassDefinitionCrossReference_3_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getUniversalClassAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUniversalClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getUniversalClassAccess().getSubClassOfClassDefinitionCrossReference_3_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getUniversalClassAccess().getRightParenthesisKeyword_3_4());
			}
		)?
		(
			otherlv_9='disjointWith'
			{
				newLeafNode(otherlv_9, grammarAccess.getUniversalClassAccess().getDisjointWithKeyword_4_0());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getUniversalClassAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUniversalClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getUniversalClassAccess().getDisjointWithClassDefinitionCrossReference_4_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getUniversalClassAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUniversalClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getUniversalClassAccess().getDisjointWithClassDefinitionCrossReference_4_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14=')'
			{
				newLeafNode(otherlv_14, grammarAccess.getUniversalClassAccess().getRightParenthesisKeyword_4_4());
			}
		)?
		(
			otherlv_15='equivalentTo'
			{
				newLeafNode(otherlv_15, grammarAccess.getUniversalClassAccess().getEquivalentToKeyword_5_0());
			}
			otherlv_16='('
			{
				newLeafNode(otherlv_16, grammarAccess.getUniversalClassAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUniversalClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getUniversalClassAccess().getEquivalentToClassDefinitionCrossReference_5_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_18=','
				{
					newLeafNode(otherlv_18, grammarAccess.getUniversalClassAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUniversalClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getUniversalClassAccess().getEquivalentToClassDefinitionCrossReference_5_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_20=')'
			{
				newLeafNode(otherlv_20, grammarAccess.getUniversalClassAccess().getRightParenthesisKeyword_5_4());
			}
		)?
		(
			otherlv_21='describedBy'
			{
				newLeafNode(otherlv_21, grammarAccess.getUniversalClassAccess().getDescribedByKeyword_6_0());
			}
			otherlv_22='('
			{
				newLeafNode(otherlv_22, grammarAccess.getUniversalClassAccess().getLeftParenthesisKeyword_6_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUniversalClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getUniversalClassAccess().getDescribedByPropertyDefinitionCrossReference_6_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_24=','
				{
					newLeafNode(otherlv_24, grammarAccess.getUniversalClassAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUniversalClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getUniversalClassAccess().getDescribedByPropertyDefinitionCrossReference_6_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_26=')'
			{
				newLeafNode(otherlv_26, grammarAccess.getUniversalClassAccess().getRightParenthesisKeyword_6_4());
			}
		)?
		otherlv_27='onProperty'
		{
			newLeafNode(otherlv_27, grammarAccess.getUniversalClassAccess().getOnPropertyKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUniversalClassRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getUniversalClassAccess().getOnPropertyPropertyDefinitionCrossReference_8_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_29='toDataDefinition'
		{
			newLeafNode(otherlv_29, grammarAccess.getUniversalClassAccess().getToDataDefinitionKeyword_9());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUniversalClassRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getUniversalClassAccess().getToDataDefinitionDataTypeDefinitionCrossReference_10_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_31='}'
		{
			newLeafNode(otherlv_31, grammarAccess.getUniversalClassAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleExistantialClass
entryRuleExistantialClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistantialClassRule()); }
	iv_ruleExistantialClass=ruleExistantialClass
	{ $current=$iv_ruleExistantialClass.current; }
	EOF;

// Rule ExistantialClass
ruleExistantialClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ExistantialClass'
		{
			newLeafNode(otherlv_0, grammarAccess.getExistantialClassAccess().getExistantialClassKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExistantialClassAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExistantialClassRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getExistantialClassAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='subClassOf'
			{
				newLeafNode(otherlv_3, grammarAccess.getExistantialClassAccess().getSubClassOfKeyword_3_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getExistantialClassAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExistantialClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getExistantialClassAccess().getSubClassOfClassDefinitionCrossReference_3_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getExistantialClassAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExistantialClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getExistantialClassAccess().getSubClassOfClassDefinitionCrossReference_3_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getExistantialClassAccess().getRightParenthesisKeyword_3_4());
			}
		)?
		(
			otherlv_9='disjointWith'
			{
				newLeafNode(otherlv_9, grammarAccess.getExistantialClassAccess().getDisjointWithKeyword_4_0());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getExistantialClassAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExistantialClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getExistantialClassAccess().getDisjointWithClassDefinitionCrossReference_4_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getExistantialClassAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExistantialClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getExistantialClassAccess().getDisjointWithClassDefinitionCrossReference_4_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14=')'
			{
				newLeafNode(otherlv_14, grammarAccess.getExistantialClassAccess().getRightParenthesisKeyword_4_4());
			}
		)?
		(
			otherlv_15='equivalentTo'
			{
				newLeafNode(otherlv_15, grammarAccess.getExistantialClassAccess().getEquivalentToKeyword_5_0());
			}
			otherlv_16='('
			{
				newLeafNode(otherlv_16, grammarAccess.getExistantialClassAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExistantialClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getExistantialClassAccess().getEquivalentToClassDefinitionCrossReference_5_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_18=','
				{
					newLeafNode(otherlv_18, grammarAccess.getExistantialClassAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExistantialClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getExistantialClassAccess().getEquivalentToClassDefinitionCrossReference_5_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_20=')'
			{
				newLeafNode(otherlv_20, grammarAccess.getExistantialClassAccess().getRightParenthesisKeyword_5_4());
			}
		)?
		(
			otherlv_21='describedBy'
			{
				newLeafNode(otherlv_21, grammarAccess.getExistantialClassAccess().getDescribedByKeyword_6_0());
			}
			otherlv_22='('
			{
				newLeafNode(otherlv_22, grammarAccess.getExistantialClassAccess().getLeftParenthesisKeyword_6_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExistantialClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getExistantialClassAccess().getDescribedByPropertyDefinitionCrossReference_6_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_24=','
				{
					newLeafNode(otherlv_24, grammarAccess.getExistantialClassAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExistantialClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getExistantialClassAccess().getDescribedByPropertyDefinitionCrossReference_6_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_26=')'
			{
				newLeafNode(otherlv_26, grammarAccess.getExistantialClassAccess().getRightParenthesisKeyword_6_4());
			}
		)?
		otherlv_27='onProperty'
		{
			newLeafNode(otherlv_27, grammarAccess.getExistantialClassAccess().getOnPropertyKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExistantialClassRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getExistantialClassAccess().getOnPropertyPropertyDefinitionCrossReference_8_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_29='toDataDefinition'
		{
			newLeafNode(otherlv_29, grammarAccess.getExistantialClassAccess().getToDataDefinitionKeyword_9());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExistantialClassRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getExistantialClassAccess().getToDataDefinitionDataTypeDefinitionCrossReference_10_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_31='}'
		{
			newLeafNode(otherlv_31, grammarAccess.getExistantialClassAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleHasValueClass
entryRuleHasValueClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHasValueClassRule()); }
	iv_ruleHasValueClass=ruleHasValueClass
	{ $current=$iv_ruleHasValueClass.current; }
	EOF;

// Rule HasValueClass
ruleHasValueClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='HasValueClass'
		{
			newLeafNode(otherlv_0, grammarAccess.getHasValueClassAccess().getHasValueClassKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHasValueClassAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHasValueClassRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getHasValueClassAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='subClassOf'
			{
				newLeafNode(otherlv_3, grammarAccess.getHasValueClassAccess().getSubClassOfKeyword_3_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getHasValueClassAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHasValueClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getHasValueClassAccess().getSubClassOfClassDefinitionCrossReference_3_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getHasValueClassAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHasValueClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getHasValueClassAccess().getSubClassOfClassDefinitionCrossReference_3_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getHasValueClassAccess().getRightParenthesisKeyword_3_4());
			}
		)?
		(
			otherlv_9='disjointWith'
			{
				newLeafNode(otherlv_9, grammarAccess.getHasValueClassAccess().getDisjointWithKeyword_4_0());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getHasValueClassAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHasValueClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getHasValueClassAccess().getDisjointWithClassDefinitionCrossReference_4_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getHasValueClassAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHasValueClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getHasValueClassAccess().getDisjointWithClassDefinitionCrossReference_4_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14=')'
			{
				newLeafNode(otherlv_14, grammarAccess.getHasValueClassAccess().getRightParenthesisKeyword_4_4());
			}
		)?
		(
			otherlv_15='equivalentTo'
			{
				newLeafNode(otherlv_15, grammarAccess.getHasValueClassAccess().getEquivalentToKeyword_5_0());
			}
			otherlv_16='('
			{
				newLeafNode(otherlv_16, grammarAccess.getHasValueClassAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHasValueClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getHasValueClassAccess().getEquivalentToClassDefinitionCrossReference_5_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_18=','
				{
					newLeafNode(otherlv_18, grammarAccess.getHasValueClassAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHasValueClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getHasValueClassAccess().getEquivalentToClassDefinitionCrossReference_5_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_20=')'
			{
				newLeafNode(otherlv_20, grammarAccess.getHasValueClassAccess().getRightParenthesisKeyword_5_4());
			}
		)?
		(
			otherlv_21='describedBy'
			{
				newLeafNode(otherlv_21, grammarAccess.getHasValueClassAccess().getDescribedByKeyword_6_0());
			}
			otherlv_22='('
			{
				newLeafNode(otherlv_22, grammarAccess.getHasValueClassAccess().getLeftParenthesisKeyword_6_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHasValueClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getHasValueClassAccess().getDescribedByPropertyDefinitionCrossReference_6_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_24=','
				{
					newLeafNode(otherlv_24, grammarAccess.getHasValueClassAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHasValueClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getHasValueClassAccess().getDescribedByPropertyDefinitionCrossReference_6_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_26=')'
			{
				newLeafNode(otherlv_26, grammarAccess.getHasValueClassAccess().getRightParenthesisKeyword_6_4());
			}
		)?
		otherlv_27='onProperty'
		{
			newLeafNode(otherlv_27, grammarAccess.getHasValueClassAccess().getOnPropertyKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHasValueClassRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getHasValueClassAccess().getOnPropertyPropertyDefinitionCrossReference_8_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_29='toDataDefinition'
		{
			newLeafNode(otherlv_29, grammarAccess.getHasValueClassAccess().getToDataDefinitionKeyword_9());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHasValueClassRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getHasValueClassAccess().getToDataDefinitionDataTypeDefinitionCrossReference_10_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_31='}'
		{
			newLeafNode(otherlv_31, grammarAccess.getHasValueClassAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleMaxCardinalityClass
entryRuleMaxCardinalityClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaxCardinalityClassRule()); }
	iv_ruleMaxCardinalityClass=ruleMaxCardinalityClass
	{ $current=$iv_ruleMaxCardinalityClass.current; }
	EOF;

// Rule MaxCardinalityClass
ruleMaxCardinalityClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MaxCardinalityClass'
		{
			newLeafNode(otherlv_0, grammarAccess.getMaxCardinalityClassAccess().getMaxCardinalityClassKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMaxCardinalityClassAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaxCardinalityClassRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMaxCardinalityClassAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='maxCard'
		{
			newLeafNode(otherlv_3, grammarAccess.getMaxCardinalityClassAccess().getMaxCardKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMaxCardinalityClassAccess().getMaxCardEIntParserRuleCall_4_0());
				}
				lv_maxCard_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaxCardinalityClassRule());
					}
					set(
						$current,
						"maxCard",
						lv_maxCard_4_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='subClassOf'
			{
				newLeafNode(otherlv_5, grammarAccess.getMaxCardinalityClassAccess().getSubClassOfKeyword_5_0());
			}
			otherlv_6='('
			{
				newLeafNode(otherlv_6, grammarAccess.getMaxCardinalityClassAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMaxCardinalityClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getMaxCardinalityClassAccess().getSubClassOfClassDefinitionCrossReference_5_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getMaxCardinalityClassAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMaxCardinalityClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getMaxCardinalityClassAccess().getSubClassOfClassDefinitionCrossReference_5_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10=')'
			{
				newLeafNode(otherlv_10, grammarAccess.getMaxCardinalityClassAccess().getRightParenthesisKeyword_5_4());
			}
		)?
		(
			otherlv_11='disjointWith'
			{
				newLeafNode(otherlv_11, grammarAccess.getMaxCardinalityClassAccess().getDisjointWithKeyword_6_0());
			}
			otherlv_12='('
			{
				newLeafNode(otherlv_12, grammarAccess.getMaxCardinalityClassAccess().getLeftParenthesisKeyword_6_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMaxCardinalityClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getMaxCardinalityClassAccess().getDisjointWithClassDefinitionCrossReference_6_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getMaxCardinalityClassAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMaxCardinalityClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getMaxCardinalityClassAccess().getDisjointWithClassDefinitionCrossReference_6_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16=')'
			{
				newLeafNode(otherlv_16, grammarAccess.getMaxCardinalityClassAccess().getRightParenthesisKeyword_6_4());
			}
		)?
		(
			otherlv_17='equivalentTo'
			{
				newLeafNode(otherlv_17, grammarAccess.getMaxCardinalityClassAccess().getEquivalentToKeyword_7_0());
			}
			otherlv_18='('
			{
				newLeafNode(otherlv_18, grammarAccess.getMaxCardinalityClassAccess().getLeftParenthesisKeyword_7_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMaxCardinalityClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getMaxCardinalityClassAccess().getEquivalentToClassDefinitionCrossReference_7_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_20=','
				{
					newLeafNode(otherlv_20, grammarAccess.getMaxCardinalityClassAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMaxCardinalityClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getMaxCardinalityClassAccess().getEquivalentToClassDefinitionCrossReference_7_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_22=')'
			{
				newLeafNode(otherlv_22, grammarAccess.getMaxCardinalityClassAccess().getRightParenthesisKeyword_7_4());
			}
		)?
		(
			otherlv_23='describedBy'
			{
				newLeafNode(otherlv_23, grammarAccess.getMaxCardinalityClassAccess().getDescribedByKeyword_8_0());
			}
			otherlv_24='('
			{
				newLeafNode(otherlv_24, grammarAccess.getMaxCardinalityClassAccess().getLeftParenthesisKeyword_8_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMaxCardinalityClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getMaxCardinalityClassAccess().getDescribedByPropertyDefinitionCrossReference_8_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_26=','
				{
					newLeafNode(otherlv_26, grammarAccess.getMaxCardinalityClassAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMaxCardinalityClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getMaxCardinalityClassAccess().getDescribedByPropertyDefinitionCrossReference_8_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_28=')'
			{
				newLeafNode(otherlv_28, grammarAccess.getMaxCardinalityClassAccess().getRightParenthesisKeyword_8_4());
			}
		)?
		otherlv_29='onProperty'
		{
			newLeafNode(otherlv_29, grammarAccess.getMaxCardinalityClassAccess().getOnPropertyKeyword_9());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMaxCardinalityClassRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getMaxCardinalityClassAccess().getOnPropertyPropertyDefinitionCrossReference_10_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_31='}'
		{
			newLeafNode(otherlv_31, grammarAccess.getMaxCardinalityClassAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleMinCardinalityClass
entryRuleMinCardinalityClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMinCardinalityClassRule()); }
	iv_ruleMinCardinalityClass=ruleMinCardinalityClass
	{ $current=$iv_ruleMinCardinalityClass.current; }
	EOF;

// Rule MinCardinalityClass
ruleMinCardinalityClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MinCardinalityClass'
		{
			newLeafNode(otherlv_0, grammarAccess.getMinCardinalityClassAccess().getMinCardinalityClassKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMinCardinalityClassAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMinCardinalityClassRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMinCardinalityClassAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='minCard'
		{
			newLeafNode(otherlv_3, grammarAccess.getMinCardinalityClassAccess().getMinCardKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMinCardinalityClassAccess().getMinCardEIntParserRuleCall_4_0());
				}
				lv_minCard_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMinCardinalityClassRule());
					}
					set(
						$current,
						"minCard",
						lv_minCard_4_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='subClassOf'
			{
				newLeafNode(otherlv_5, grammarAccess.getMinCardinalityClassAccess().getSubClassOfKeyword_5_0());
			}
			otherlv_6='('
			{
				newLeafNode(otherlv_6, grammarAccess.getMinCardinalityClassAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMinCardinalityClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getMinCardinalityClassAccess().getSubClassOfClassDefinitionCrossReference_5_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getMinCardinalityClassAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMinCardinalityClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getMinCardinalityClassAccess().getSubClassOfClassDefinitionCrossReference_5_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10=')'
			{
				newLeafNode(otherlv_10, grammarAccess.getMinCardinalityClassAccess().getRightParenthesisKeyword_5_4());
			}
		)?
		(
			otherlv_11='disjointWith'
			{
				newLeafNode(otherlv_11, grammarAccess.getMinCardinalityClassAccess().getDisjointWithKeyword_6_0());
			}
			otherlv_12='('
			{
				newLeafNode(otherlv_12, grammarAccess.getMinCardinalityClassAccess().getLeftParenthesisKeyword_6_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMinCardinalityClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getMinCardinalityClassAccess().getDisjointWithClassDefinitionCrossReference_6_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getMinCardinalityClassAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMinCardinalityClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getMinCardinalityClassAccess().getDisjointWithClassDefinitionCrossReference_6_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16=')'
			{
				newLeafNode(otherlv_16, grammarAccess.getMinCardinalityClassAccess().getRightParenthesisKeyword_6_4());
			}
		)?
		(
			otherlv_17='equivalentTo'
			{
				newLeafNode(otherlv_17, grammarAccess.getMinCardinalityClassAccess().getEquivalentToKeyword_7_0());
			}
			otherlv_18='('
			{
				newLeafNode(otherlv_18, grammarAccess.getMinCardinalityClassAccess().getLeftParenthesisKeyword_7_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMinCardinalityClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getMinCardinalityClassAccess().getEquivalentToClassDefinitionCrossReference_7_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_20=','
				{
					newLeafNode(otherlv_20, grammarAccess.getMinCardinalityClassAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMinCardinalityClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getMinCardinalityClassAccess().getEquivalentToClassDefinitionCrossReference_7_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_22=')'
			{
				newLeafNode(otherlv_22, grammarAccess.getMinCardinalityClassAccess().getRightParenthesisKeyword_7_4());
			}
		)?
		(
			otherlv_23='describedBy'
			{
				newLeafNode(otherlv_23, grammarAccess.getMinCardinalityClassAccess().getDescribedByKeyword_8_0());
			}
			otherlv_24='('
			{
				newLeafNode(otherlv_24, grammarAccess.getMinCardinalityClassAccess().getLeftParenthesisKeyword_8_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMinCardinalityClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getMinCardinalityClassAccess().getDescribedByPropertyDefinitionCrossReference_8_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_26=','
				{
					newLeafNode(otherlv_26, grammarAccess.getMinCardinalityClassAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMinCardinalityClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getMinCardinalityClassAccess().getDescribedByPropertyDefinitionCrossReference_8_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_28=')'
			{
				newLeafNode(otherlv_28, grammarAccess.getMinCardinalityClassAccess().getRightParenthesisKeyword_8_4());
			}
		)?
		otherlv_29='onProperty'
		{
			newLeafNode(otherlv_29, grammarAccess.getMinCardinalityClassAccess().getOnPropertyKeyword_9());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMinCardinalityClassRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getMinCardinalityClassAccess().getOnPropertyPropertyDefinitionCrossReference_10_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_31='}'
		{
			newLeafNode(otherlv_31, grammarAccess.getMinCardinalityClassAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleCardinalityClass
entryRuleCardinalityClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCardinalityClassRule()); }
	iv_ruleCardinalityClass=ruleCardinalityClass
	{ $current=$iv_ruleCardinalityClass.current; }
	EOF;

// Rule CardinalityClass
ruleCardinalityClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CardinalityClass'
		{
			newLeafNode(otherlv_0, grammarAccess.getCardinalityClassAccess().getCardinalityClassKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCardinalityClassAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCardinalityClassRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCardinalityClassAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='card'
		{
			newLeafNode(otherlv_3, grammarAccess.getCardinalityClassAccess().getCardKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCardinalityClassAccess().getCardEIntParserRuleCall_4_0());
				}
				lv_card_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCardinalityClassRule());
					}
					set(
						$current,
						"card",
						lv_card_4_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='subClassOf'
			{
				newLeafNode(otherlv_5, grammarAccess.getCardinalityClassAccess().getSubClassOfKeyword_5_0());
			}
			otherlv_6='('
			{
				newLeafNode(otherlv_6, grammarAccess.getCardinalityClassAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCardinalityClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getCardinalityClassAccess().getSubClassOfClassDefinitionCrossReference_5_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getCardinalityClassAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCardinalityClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getCardinalityClassAccess().getSubClassOfClassDefinitionCrossReference_5_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10=')'
			{
				newLeafNode(otherlv_10, grammarAccess.getCardinalityClassAccess().getRightParenthesisKeyword_5_4());
			}
		)?
		(
			otherlv_11='disjointWith'
			{
				newLeafNode(otherlv_11, grammarAccess.getCardinalityClassAccess().getDisjointWithKeyword_6_0());
			}
			otherlv_12='('
			{
				newLeafNode(otherlv_12, grammarAccess.getCardinalityClassAccess().getLeftParenthesisKeyword_6_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCardinalityClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getCardinalityClassAccess().getDisjointWithClassDefinitionCrossReference_6_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getCardinalityClassAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCardinalityClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getCardinalityClassAccess().getDisjointWithClassDefinitionCrossReference_6_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16=')'
			{
				newLeafNode(otherlv_16, grammarAccess.getCardinalityClassAccess().getRightParenthesisKeyword_6_4());
			}
		)?
		(
			otherlv_17='equivalentTo'
			{
				newLeafNode(otherlv_17, grammarAccess.getCardinalityClassAccess().getEquivalentToKeyword_7_0());
			}
			otherlv_18='('
			{
				newLeafNode(otherlv_18, grammarAccess.getCardinalityClassAccess().getLeftParenthesisKeyword_7_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCardinalityClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getCardinalityClassAccess().getEquivalentToClassDefinitionCrossReference_7_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_20=','
				{
					newLeafNode(otherlv_20, grammarAccess.getCardinalityClassAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCardinalityClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getCardinalityClassAccess().getEquivalentToClassDefinitionCrossReference_7_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_22=')'
			{
				newLeafNode(otherlv_22, grammarAccess.getCardinalityClassAccess().getRightParenthesisKeyword_7_4());
			}
		)?
		(
			otherlv_23='describedBy'
			{
				newLeafNode(otherlv_23, grammarAccess.getCardinalityClassAccess().getDescribedByKeyword_8_0());
			}
			otherlv_24='('
			{
				newLeafNode(otherlv_24, grammarAccess.getCardinalityClassAccess().getLeftParenthesisKeyword_8_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCardinalityClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getCardinalityClassAccess().getDescribedByPropertyDefinitionCrossReference_8_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_26=','
				{
					newLeafNode(otherlv_26, grammarAccess.getCardinalityClassAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCardinalityClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getCardinalityClassAccess().getDescribedByPropertyDefinitionCrossReference_8_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_28=')'
			{
				newLeafNode(otherlv_28, grammarAccess.getCardinalityClassAccess().getRightParenthesisKeyword_8_4());
			}
		)?
		otherlv_29='onProperty'
		{
			newLeafNode(otherlv_29, grammarAccess.getCardinalityClassAccess().getOnPropertyKeyword_9());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCardinalityClassRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getCardinalityClassAccess().getOnPropertyPropertyDefinitionCrossReference_10_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_31='}'
		{
			newLeafNode(otherlv_31, grammarAccess.getCardinalityClassAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleEnumeratedClass
entryRuleEnumeratedClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumeratedClassRule()); }
	iv_ruleEnumeratedClass=ruleEnumeratedClass
	{ $current=$iv_ruleEnumeratedClass.current; }
	EOF;

// Rule EnumeratedClass
ruleEnumeratedClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EnumeratedClass'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumeratedClassAccess().getEnumeratedClassKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumeratedClassAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumeratedClassRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEnumeratedClassAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='subClassOf'
			{
				newLeafNode(otherlv_3, grammarAccess.getEnumeratedClassAccess().getSubClassOfKeyword_3_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getEnumeratedClassAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnumeratedClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getEnumeratedClassAccess().getSubClassOfClassDefinitionCrossReference_3_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getEnumeratedClassAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEnumeratedClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getEnumeratedClassAccess().getSubClassOfClassDefinitionCrossReference_3_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getEnumeratedClassAccess().getRightParenthesisKeyword_3_4());
			}
		)?
		(
			otherlv_9='disjointWith'
			{
				newLeafNode(otherlv_9, grammarAccess.getEnumeratedClassAccess().getDisjointWithKeyword_4_0());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getEnumeratedClassAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnumeratedClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getEnumeratedClassAccess().getDisjointWithClassDefinitionCrossReference_4_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getEnumeratedClassAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEnumeratedClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getEnumeratedClassAccess().getDisjointWithClassDefinitionCrossReference_4_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14=')'
			{
				newLeafNode(otherlv_14, grammarAccess.getEnumeratedClassAccess().getRightParenthesisKeyword_4_4());
			}
		)?
		(
			otherlv_15='equivalentTo'
			{
				newLeafNode(otherlv_15, grammarAccess.getEnumeratedClassAccess().getEquivalentToKeyword_5_0());
			}
			otherlv_16='('
			{
				newLeafNode(otherlv_16, grammarAccess.getEnumeratedClassAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnumeratedClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getEnumeratedClassAccess().getEquivalentToClassDefinitionCrossReference_5_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_18=','
				{
					newLeafNode(otherlv_18, grammarAccess.getEnumeratedClassAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEnumeratedClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getEnumeratedClassAccess().getEquivalentToClassDefinitionCrossReference_5_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_20=')'
			{
				newLeafNode(otherlv_20, grammarAccess.getEnumeratedClassAccess().getRightParenthesisKeyword_5_4());
			}
		)?
		(
			otherlv_21='describedBy'
			{
				newLeafNode(otherlv_21, grammarAccess.getEnumeratedClassAccess().getDescribedByKeyword_6_0());
			}
			otherlv_22='('
			{
				newLeafNode(otherlv_22, grammarAccess.getEnumeratedClassAccess().getLeftParenthesisKeyword_6_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnumeratedClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getEnumeratedClassAccess().getDescribedByPropertyDefinitionCrossReference_6_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_24=','
				{
					newLeafNode(otherlv_24, grammarAccess.getEnumeratedClassAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEnumeratedClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getEnumeratedClassAccess().getDescribedByPropertyDefinitionCrossReference_6_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_26=')'
			{
				newLeafNode(otherlv_26, grammarAccess.getEnumeratedClassAccess().getRightParenthesisKeyword_6_4());
			}
		)?
		otherlv_27='oneOf'
		{
			newLeafNode(otherlv_27, grammarAccess.getEnumeratedClassAccess().getOneOfKeyword_7());
		}
		otherlv_28='('
		{
			newLeafNode(otherlv_28, grammarAccess.getEnumeratedClassAccess().getLeftParenthesisKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumeratedClassRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getEnumeratedClassAccess().getOneOfSingleValueCrossReference_9_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_30=','
			{
				newLeafNode(otherlv_30, grammarAccess.getEnumeratedClassAccess().getCommaKeyword_10_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnumeratedClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getEnumeratedClassAccess().getOneOfSingleValueCrossReference_10_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_32=')'
		{
			newLeafNode(otherlv_32, grammarAccess.getEnumeratedClassAccess().getRightParenthesisKeyword_11());
		}
		otherlv_33='}'
		{
			newLeafNode(otherlv_33, grammarAccess.getEnumeratedClassAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleUnionClass
entryRuleUnionClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnionClassRule()); }
	iv_ruleUnionClass=ruleUnionClass
	{ $current=$iv_ruleUnionClass.current; }
	EOF;

// Rule UnionClass
ruleUnionClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='UnionClass'
		{
			newLeafNode(otherlv_0, grammarAccess.getUnionClassAccess().getUnionClassKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnionClassAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnionClassRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getUnionClassAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='subClassOf'
			{
				newLeafNode(otherlv_3, grammarAccess.getUnionClassAccess().getSubClassOfKeyword_3_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getUnionClassAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnionClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getUnionClassAccess().getSubClassOfClassDefinitionCrossReference_3_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getUnionClassAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnionClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getUnionClassAccess().getSubClassOfClassDefinitionCrossReference_3_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getUnionClassAccess().getRightParenthesisKeyword_3_4());
			}
		)?
		(
			otherlv_9='disjointWith'
			{
				newLeafNode(otherlv_9, grammarAccess.getUnionClassAccess().getDisjointWithKeyword_4_0());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getUnionClassAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnionClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getUnionClassAccess().getDisjointWithClassDefinitionCrossReference_4_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getUnionClassAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnionClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getUnionClassAccess().getDisjointWithClassDefinitionCrossReference_4_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14=')'
			{
				newLeafNode(otherlv_14, grammarAccess.getUnionClassAccess().getRightParenthesisKeyword_4_4());
			}
		)?
		(
			otherlv_15='equivalentTo'
			{
				newLeafNode(otherlv_15, grammarAccess.getUnionClassAccess().getEquivalentToKeyword_5_0());
			}
			otherlv_16='('
			{
				newLeafNode(otherlv_16, grammarAccess.getUnionClassAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnionClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getUnionClassAccess().getEquivalentToClassDefinitionCrossReference_5_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_18=','
				{
					newLeafNode(otherlv_18, grammarAccess.getUnionClassAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnionClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getUnionClassAccess().getEquivalentToClassDefinitionCrossReference_5_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_20=')'
			{
				newLeafNode(otherlv_20, grammarAccess.getUnionClassAccess().getRightParenthesisKeyword_5_4());
			}
		)?
		(
			otherlv_21='describedBy'
			{
				newLeafNode(otherlv_21, grammarAccess.getUnionClassAccess().getDescribedByKeyword_6_0());
			}
			otherlv_22='('
			{
				newLeafNode(otherlv_22, grammarAccess.getUnionClassAccess().getLeftParenthesisKeyword_6_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnionClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getUnionClassAccess().getDescribedByPropertyDefinitionCrossReference_6_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_24=','
				{
					newLeafNode(otherlv_24, grammarAccess.getUnionClassAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnionClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getUnionClassAccess().getDescribedByPropertyDefinitionCrossReference_6_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_26=')'
			{
				newLeafNode(otherlv_26, grammarAccess.getUnionClassAccess().getRightParenthesisKeyword_6_4());
			}
		)?
		otherlv_27='combinationOf'
		{
			newLeafNode(otherlv_27, grammarAccess.getUnionClassAccess().getCombinationOfKeyword_7());
		}
		otherlv_28='('
		{
			newLeafNode(otherlv_28, grammarAccess.getUnionClassAccess().getLeftParenthesisKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUnionClassRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getUnionClassAccess().getCombinationOfClassDefinitionCrossReference_9_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_30=','
			{
				newLeafNode(otherlv_30, grammarAccess.getUnionClassAccess().getCommaKeyword_10_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnionClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getUnionClassAccess().getCombinationOfClassDefinitionCrossReference_10_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_32=')'
		{
			newLeafNode(otherlv_32, grammarAccess.getUnionClassAccess().getRightParenthesisKeyword_11());
		}
		otherlv_33='}'
		{
			newLeafNode(otherlv_33, grammarAccess.getUnionClassAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleIntersectionClass
entryRuleIntersectionClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntersectionClassRule()); }
	iv_ruleIntersectionClass=ruleIntersectionClass
	{ $current=$iv_ruleIntersectionClass.current; }
	EOF;

// Rule IntersectionClass
ruleIntersectionClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='IntersectionClass'
		{
			newLeafNode(otherlv_0, grammarAccess.getIntersectionClassAccess().getIntersectionClassKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIntersectionClassAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntersectionClassRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getIntersectionClassAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='subClassOf'
			{
				newLeafNode(otherlv_3, grammarAccess.getIntersectionClassAccess().getSubClassOfKeyword_3_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getIntersectionClassAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIntersectionClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getIntersectionClassAccess().getSubClassOfClassDefinitionCrossReference_3_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getIntersectionClassAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getIntersectionClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getIntersectionClassAccess().getSubClassOfClassDefinitionCrossReference_3_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getIntersectionClassAccess().getRightParenthesisKeyword_3_4());
			}
		)?
		(
			otherlv_9='disjointWith'
			{
				newLeafNode(otherlv_9, grammarAccess.getIntersectionClassAccess().getDisjointWithKeyword_4_0());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getIntersectionClassAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIntersectionClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getIntersectionClassAccess().getDisjointWithClassDefinitionCrossReference_4_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getIntersectionClassAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getIntersectionClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getIntersectionClassAccess().getDisjointWithClassDefinitionCrossReference_4_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14=')'
			{
				newLeafNode(otherlv_14, grammarAccess.getIntersectionClassAccess().getRightParenthesisKeyword_4_4());
			}
		)?
		(
			otherlv_15='equivalentTo'
			{
				newLeafNode(otherlv_15, grammarAccess.getIntersectionClassAccess().getEquivalentToKeyword_5_0());
			}
			otherlv_16='('
			{
				newLeafNode(otherlv_16, grammarAccess.getIntersectionClassAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIntersectionClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getIntersectionClassAccess().getEquivalentToClassDefinitionCrossReference_5_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_18=','
				{
					newLeafNode(otherlv_18, grammarAccess.getIntersectionClassAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getIntersectionClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getIntersectionClassAccess().getEquivalentToClassDefinitionCrossReference_5_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_20=')'
			{
				newLeafNode(otherlv_20, grammarAccess.getIntersectionClassAccess().getRightParenthesisKeyword_5_4());
			}
		)?
		(
			otherlv_21='describedBy'
			{
				newLeafNode(otherlv_21, grammarAccess.getIntersectionClassAccess().getDescribedByKeyword_6_0());
			}
			otherlv_22='('
			{
				newLeafNode(otherlv_22, grammarAccess.getIntersectionClassAccess().getLeftParenthesisKeyword_6_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIntersectionClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getIntersectionClassAccess().getDescribedByPropertyDefinitionCrossReference_6_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_24=','
				{
					newLeafNode(otherlv_24, grammarAccess.getIntersectionClassAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getIntersectionClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getIntersectionClassAccess().getDescribedByPropertyDefinitionCrossReference_6_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_26=')'
			{
				newLeafNode(otherlv_26, grammarAccess.getIntersectionClassAccess().getRightParenthesisKeyword_6_4());
			}
		)?
		otherlv_27='combinationOf'
		{
			newLeafNode(otherlv_27, grammarAccess.getIntersectionClassAccess().getCombinationOfKeyword_7());
		}
		otherlv_28='('
		{
			newLeafNode(otherlv_28, grammarAccess.getIntersectionClassAccess().getLeftParenthesisKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntersectionClassRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getIntersectionClassAccess().getCombinationOfClassDefinitionCrossReference_9_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_30=','
			{
				newLeafNode(otherlv_30, grammarAccess.getIntersectionClassAccess().getCommaKeyword_10_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIntersectionClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getIntersectionClassAccess().getCombinationOfClassDefinitionCrossReference_10_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_32=')'
		{
			newLeafNode(otherlv_32, grammarAccess.getIntersectionClassAccess().getRightParenthesisKeyword_11());
		}
		otherlv_33='}'
		{
			newLeafNode(otherlv_33, grammarAccess.getIntersectionClassAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleComplementClass
entryRuleComplementClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComplementClassRule()); }
	iv_ruleComplementClass=ruleComplementClass
	{ $current=$iv_ruleComplementClass.current; }
	EOF;

// Rule ComplementClass
ruleComplementClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ComplementClass'
		{
			newLeafNode(otherlv_0, grammarAccess.getComplementClassAccess().getComplementClassKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComplementClassAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComplementClassRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getComplementClassAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='subClassOf'
			{
				newLeafNode(otherlv_3, grammarAccess.getComplementClassAccess().getSubClassOfKeyword_3_0());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getComplementClassAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComplementClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getComplementClassAccess().getSubClassOfClassDefinitionCrossReference_3_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getComplementClassAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComplementClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getComplementClassAccess().getSubClassOfClassDefinitionCrossReference_3_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getComplementClassAccess().getRightParenthesisKeyword_3_4());
			}
		)?
		(
			otherlv_9='disjointWith'
			{
				newLeafNode(otherlv_9, grammarAccess.getComplementClassAccess().getDisjointWithKeyword_4_0());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getComplementClassAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComplementClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getComplementClassAccess().getDisjointWithClassDefinitionCrossReference_4_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getComplementClassAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComplementClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getComplementClassAccess().getDisjointWithClassDefinitionCrossReference_4_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14=')'
			{
				newLeafNode(otherlv_14, grammarAccess.getComplementClassAccess().getRightParenthesisKeyword_4_4());
			}
		)?
		(
			otherlv_15='equivalentTo'
			{
				newLeafNode(otherlv_15, grammarAccess.getComplementClassAccess().getEquivalentToKeyword_5_0());
			}
			otherlv_16='('
			{
				newLeafNode(otherlv_16, grammarAccess.getComplementClassAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComplementClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getComplementClassAccess().getEquivalentToClassDefinitionCrossReference_5_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_18=','
				{
					newLeafNode(otherlv_18, grammarAccess.getComplementClassAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComplementClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getComplementClassAccess().getEquivalentToClassDefinitionCrossReference_5_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_20=')'
			{
				newLeafNode(otherlv_20, grammarAccess.getComplementClassAccess().getRightParenthesisKeyword_5_4());
			}
		)?
		(
			otherlv_21='describedBy'
			{
				newLeafNode(otherlv_21, grammarAccess.getComplementClassAccess().getDescribedByKeyword_6_0());
			}
			otherlv_22='('
			{
				newLeafNode(otherlv_22, grammarAccess.getComplementClassAccess().getLeftParenthesisKeyword_6_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComplementClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getComplementClassAccess().getDescribedByPropertyDefinitionCrossReference_6_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_24=','
				{
					newLeafNode(otherlv_24, grammarAccess.getComplementClassAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComplementClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getComplementClassAccess().getDescribedByPropertyDefinitionCrossReference_6_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_26=')'
			{
				newLeafNode(otherlv_26, grammarAccess.getComplementClassAccess().getRightParenthesisKeyword_6_4());
			}
		)?
		otherlv_27='combinationOf'
		{
			newLeafNode(otherlv_27, grammarAccess.getComplementClassAccess().getCombinationOfKeyword_7());
		}
		otherlv_28='('
		{
			newLeafNode(otherlv_28, grammarAccess.getComplementClassAccess().getLeftParenthesisKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComplementClassRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getComplementClassAccess().getCombinationOfClassDefinitionCrossReference_9_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_30=','
			{
				newLeafNode(otherlv_30, grammarAccess.getComplementClassAccess().getCommaKeyword_10_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComplementClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getComplementClassAccess().getCombinationOfClassDefinitionCrossReference_10_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_32=')'
		{
			newLeafNode(otherlv_32, grammarAccess.getComplementClassAccess().getRightParenthesisKeyword_11());
		}
		otherlv_33='}'
		{
			newLeafNode(otherlv_33, grammarAccess.getComplementClassAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleSingleValue
entryRuleSingleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleValueRule()); }
	iv_ruleSingleValue=ruleSingleValue
	{ $current=$iv_ruleSingleValue.current; }
	EOF;

// Rule SingleValue
ruleSingleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SingleValue'
		{
			newLeafNode(otherlv_0, grammarAccess.getSingleValueAccess().getSingleValueKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleValueAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleValueRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSingleValueAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='isOfType'
		{
			newLeafNode(otherlv_3, grammarAccess.getSingleValueAccess().getIsOfTypeKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleValueRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSingleValueAccess().getIsOfTypeDataTypeDefinitionCrossReference_4_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getSingleValueAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleSimpleProperty
entryRuleSimpleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimplePropertyRule()); }
	iv_ruleSimpleProperty=ruleSimpleProperty
	{ $current=$iv_ruleSimpleProperty.current; }
	EOF;

// Rule SimpleProperty
ruleSimpleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSimplePropertyAccess().getSimplePropertyAction_0(),
					$current);
			}
		)
		(
			(
				lv_isFunctional_1_0='isFunctional'
				{
					newLeafNode(lv_isFunctional_1_0, grammarAccess.getSimplePropertyAccess().getIsFunctionalIsFunctionalKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimplePropertyRule());
					}
					setWithLastConsumed($current, "isFunctional", lv_isFunctional_1_0 != null, "isFunctional");
				}
			)
		)?
		(
			(
				lv_isSymmetric_2_0='isSymmetric'
				{
					newLeafNode(lv_isSymmetric_2_0, grammarAccess.getSimplePropertyAccess().getIsSymmetricIsSymmetricKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimplePropertyRule());
					}
					setWithLastConsumed($current, "isSymmetric", lv_isSymmetric_2_0 != null, "isSymmetric");
				}
			)
		)?
		(
			(
				lv_isTransitive_3_0='isTransitive'
				{
					newLeafNode(lv_isTransitive_3_0, grammarAccess.getSimplePropertyAccess().getIsTransitiveIsTransitiveKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimplePropertyRule());
					}
					setWithLastConsumed($current, "isTransitive", lv_isTransitive_3_0 != null, "isTransitive");
				}
			)
		)?
		(
			(
				lv_isInverseFunctional_4_0='isInverseFunctional'
				{
					newLeafNode(lv_isInverseFunctional_4_0, grammarAccess.getSimplePropertyAccess().getIsInverseFunctionalIsInverseFunctionalKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimplePropertyRule());
					}
					setWithLastConsumed($current, "isInverseFunctional", lv_isInverseFunctional_4_0 != null, "isInverseFunctional");
				}
			)
		)?
		otherlv_5='SimpleProperty'
		{
			newLeafNode(otherlv_5, grammarAccess.getSimplePropertyAccess().getSimplePropertyKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimplePropertyAccess().getNameEStringParserRuleCall_6_0());
				}
				lv_name_6_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimplePropertyRule());
					}
					set(
						$current,
						"name",
						lv_name_6_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getSimplePropertyAccess().getLeftCurlyBracketKeyword_7());
		}
		(
			otherlv_8='range'
			{
				newLeafNode(otherlv_8, grammarAccess.getSimplePropertyAccess().getRangeKeyword_8_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimplePropertyRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSimplePropertyAccess().getRangeDataTypeDefinitionCrossReference_8_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10='subPropertyOf'
			{
				newLeafNode(otherlv_10, grammarAccess.getSimplePropertyAccess().getSubPropertyOfKeyword_9_0());
			}
			otherlv_11='('
			{
				newLeafNode(otherlv_11, grammarAccess.getSimplePropertyAccess().getLeftParenthesisKeyword_9_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimplePropertyRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSimplePropertyAccess().getSubPropertyOfPropertyDefinitionCrossReference_9_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getSimplePropertyAccess().getCommaKeyword_9_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSimplePropertyRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getSimplePropertyAccess().getSubPropertyOfPropertyDefinitionCrossReference_9_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_15=')'
			{
				newLeafNode(otherlv_15, grammarAccess.getSimplePropertyAccess().getRightParenthesisKeyword_9_4());
			}
		)?
		(
			otherlv_16='equivalentTo'
			{
				newLeafNode(otherlv_16, grammarAccess.getSimplePropertyAccess().getEquivalentToKeyword_10_0());
			}
			otherlv_17='('
			{
				newLeafNode(otherlv_17, grammarAccess.getSimplePropertyAccess().getLeftParenthesisKeyword_10_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimplePropertyRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSimplePropertyAccess().getEquivalentToPropertyDefinitionCrossReference_10_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_19=','
				{
					newLeafNode(otherlv_19, grammarAccess.getSimplePropertyAccess().getCommaKeyword_10_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSimplePropertyRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getSimplePropertyAccess().getEquivalentToPropertyDefinitionCrossReference_10_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_21=')'
			{
				newLeafNode(otherlv_21, grammarAccess.getSimplePropertyAccess().getRightParenthesisKeyword_10_4());
			}
		)?
		(
			otherlv_22='inverseOf'
			{
				newLeafNode(otherlv_22, grammarAccess.getSimplePropertyAccess().getInverseOfKeyword_11_0());
			}
			otherlv_23='('
			{
				newLeafNode(otherlv_23, grammarAccess.getSimplePropertyAccess().getLeftParenthesisKeyword_11_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimplePropertyRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSimplePropertyAccess().getInverseOfPropertyDefinitionCrossReference_11_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_25=','
				{
					newLeafNode(otherlv_25, grammarAccess.getSimplePropertyAccess().getCommaKeyword_11_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSimplePropertyRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getSimplePropertyAccess().getInverseOfPropertyDefinitionCrossReference_11_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_27=')'
			{
				newLeafNode(otherlv_27, grammarAccess.getSimplePropertyAccess().getRightParenthesisKeyword_11_4());
			}
		)?
		(
			otherlv_28='domain'
			{
				newLeafNode(otherlv_28, grammarAccess.getSimplePropertyAccess().getDomainKeyword_12_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimplePropertyRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSimplePropertyAccess().getDomainClassDefinitionCrossReference_12_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_30='}'
		{
			newLeafNode(otherlv_30, grammarAccess.getSimplePropertyAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleConditionProperty
entryRuleConditionProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionPropertyRule()); }
	iv_ruleConditionProperty=ruleConditionProperty
	{ $current=$iv_ruleConditionProperty.current; }
	EOF;

// Rule ConditionProperty
ruleConditionProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConditionPropertyAccess().getConditionPropertyAction_0(),
					$current);
			}
		)
		(
			(
				lv_isFunctional_1_0='isFunctional'
				{
					newLeafNode(lv_isFunctional_1_0, grammarAccess.getConditionPropertyAccess().getIsFunctionalIsFunctionalKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionPropertyRule());
					}
					setWithLastConsumed($current, "isFunctional", lv_isFunctional_1_0 != null, "isFunctional");
				}
			)
		)?
		(
			(
				lv_isSymmetric_2_0='isSymmetric'
				{
					newLeafNode(lv_isSymmetric_2_0, grammarAccess.getConditionPropertyAccess().getIsSymmetricIsSymmetricKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionPropertyRule());
					}
					setWithLastConsumed($current, "isSymmetric", lv_isSymmetric_2_0 != null, "isSymmetric");
				}
			)
		)?
		(
			(
				lv_isTransitive_3_0='isTransitive'
				{
					newLeafNode(lv_isTransitive_3_0, grammarAccess.getConditionPropertyAccess().getIsTransitiveIsTransitiveKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionPropertyRule());
					}
					setWithLastConsumed($current, "isTransitive", lv_isTransitive_3_0 != null, "isTransitive");
				}
			)
		)?
		(
			(
				lv_isInverseFunctional_4_0='isInverseFunctional'
				{
					newLeafNode(lv_isInverseFunctional_4_0, grammarAccess.getConditionPropertyAccess().getIsInverseFunctionalIsInverseFunctionalKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionPropertyRule());
					}
					setWithLastConsumed($current, "isInverseFunctional", lv_isInverseFunctional_4_0 != null, "isInverseFunctional");
				}
			)
		)?
		otherlv_5='ConditionProperty'
		{
			newLeafNode(otherlv_5, grammarAccess.getConditionPropertyAccess().getConditionPropertyKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionPropertyAccess().getNameEStringParserRuleCall_6_0());
				}
				lv_name_6_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionPropertyRule());
					}
					set(
						$current,
						"name",
						lv_name_6_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getConditionPropertyAccess().getLeftCurlyBracketKeyword_7());
		}
		(
			otherlv_8='range'
			{
				newLeafNode(otherlv_8, grammarAccess.getConditionPropertyAccess().getRangeKeyword_8_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionPropertyRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getConditionPropertyAccess().getRangeDataTypeDefinitionCrossReference_8_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10='subPropertyOf'
			{
				newLeafNode(otherlv_10, grammarAccess.getConditionPropertyAccess().getSubPropertyOfKeyword_9_0());
			}
			otherlv_11='('
			{
				newLeafNode(otherlv_11, grammarAccess.getConditionPropertyAccess().getLeftParenthesisKeyword_9_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionPropertyRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getConditionPropertyAccess().getSubPropertyOfPropertyDefinitionCrossReference_9_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getConditionPropertyAccess().getCommaKeyword_9_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConditionPropertyRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getConditionPropertyAccess().getSubPropertyOfPropertyDefinitionCrossReference_9_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_15=')'
			{
				newLeafNode(otherlv_15, grammarAccess.getConditionPropertyAccess().getRightParenthesisKeyword_9_4());
			}
		)?
		(
			otherlv_16='equivalentTo'
			{
				newLeafNode(otherlv_16, grammarAccess.getConditionPropertyAccess().getEquivalentToKeyword_10_0());
			}
			otherlv_17='('
			{
				newLeafNode(otherlv_17, grammarAccess.getConditionPropertyAccess().getLeftParenthesisKeyword_10_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionPropertyRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getConditionPropertyAccess().getEquivalentToPropertyDefinitionCrossReference_10_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_19=','
				{
					newLeafNode(otherlv_19, grammarAccess.getConditionPropertyAccess().getCommaKeyword_10_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConditionPropertyRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getConditionPropertyAccess().getEquivalentToPropertyDefinitionCrossReference_10_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_21=')'
			{
				newLeafNode(otherlv_21, grammarAccess.getConditionPropertyAccess().getRightParenthesisKeyword_10_4());
			}
		)?
		(
			otherlv_22='inverseOf'
			{
				newLeafNode(otherlv_22, grammarAccess.getConditionPropertyAccess().getInverseOfKeyword_11_0());
			}
			otherlv_23='('
			{
				newLeafNode(otherlv_23, grammarAccess.getConditionPropertyAccess().getLeftParenthesisKeyword_11_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionPropertyRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getConditionPropertyAccess().getInverseOfPropertyDefinitionCrossReference_11_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_25=','
				{
					newLeafNode(otherlv_25, grammarAccess.getConditionPropertyAccess().getCommaKeyword_11_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConditionPropertyRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getConditionPropertyAccess().getInverseOfPropertyDefinitionCrossReference_11_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_27=')'
			{
				newLeafNode(otherlv_27, grammarAccess.getConditionPropertyAccess().getRightParenthesisKeyword_11_4());
			}
		)?
		(
			otherlv_28='domain'
			{
				newLeafNode(otherlv_28, grammarAccess.getConditionPropertyAccess().getDomainKeyword_12_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionPropertyRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getConditionPropertyAccess().getDomainClassDefinitionCrossReference_12_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_30='}'
		{
			newLeafNode(otherlv_30, grammarAccess.getConditionPropertyAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleDependentProperty
entryRuleDependentProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDependentPropertyRule()); }
	iv_ruleDependentProperty=ruleDependentProperty
	{ $current=$iv_ruleDependentProperty.current; }
	EOF;

// Rule DependentProperty
ruleDependentProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isFunctional_0_0='isFunctional'
				{
					newLeafNode(lv_isFunctional_0_0, grammarAccess.getDependentPropertyAccess().getIsFunctionalIsFunctionalKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDependentPropertyRule());
					}
					setWithLastConsumed($current, "isFunctional", lv_isFunctional_0_0 != null, "isFunctional");
				}
			)
		)?
		(
			(
				lv_isSymmetric_1_0='isSymmetric'
				{
					newLeafNode(lv_isSymmetric_1_0, grammarAccess.getDependentPropertyAccess().getIsSymmetricIsSymmetricKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDependentPropertyRule());
					}
					setWithLastConsumed($current, "isSymmetric", lv_isSymmetric_1_0 != null, "isSymmetric");
				}
			)
		)?
		(
			(
				lv_isTransitive_2_0='isTransitive'
				{
					newLeafNode(lv_isTransitive_2_0, grammarAccess.getDependentPropertyAccess().getIsTransitiveIsTransitiveKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDependentPropertyRule());
					}
					setWithLastConsumed($current, "isTransitive", lv_isTransitive_2_0 != null, "isTransitive");
				}
			)
		)?
		(
			(
				lv_isInverseFunctional_3_0='isInverseFunctional'
				{
					newLeafNode(lv_isInverseFunctional_3_0, grammarAccess.getDependentPropertyAccess().getIsInverseFunctionalIsInverseFunctionalKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDependentPropertyRule());
					}
					setWithLastConsumed($current, "isInverseFunctional", lv_isInverseFunctional_3_0 != null, "isInverseFunctional");
				}
			)
		)?
		otherlv_4='DependentProperty'
		{
			newLeafNode(otherlv_4, grammarAccess.getDependentPropertyAccess().getDependentPropertyKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDependentPropertyAccess().getNameEStringParserRuleCall_5_0());
				}
				lv_name_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDependentPropertyRule());
					}
					set(
						$current,
						"name",
						lv_name_5_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getDependentPropertyAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			otherlv_7='range'
			{
				newLeafNode(otherlv_7, grammarAccess.getDependentPropertyAccess().getRangeKeyword_7_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDependentPropertyRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDependentPropertyAccess().getRangeDataTypeDefinitionCrossReference_7_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='subPropertyOf'
			{
				newLeafNode(otherlv_9, grammarAccess.getDependentPropertyAccess().getSubPropertyOfKeyword_8_0());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getDependentPropertyAccess().getLeftParenthesisKeyword_8_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDependentPropertyRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDependentPropertyAccess().getSubPropertyOfPropertyDefinitionCrossReference_8_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getDependentPropertyAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDependentPropertyRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getDependentPropertyAccess().getSubPropertyOfPropertyDefinitionCrossReference_8_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14=')'
			{
				newLeafNode(otherlv_14, grammarAccess.getDependentPropertyAccess().getRightParenthesisKeyword_8_4());
			}
		)?
		(
			otherlv_15='equivalentTo'
			{
				newLeafNode(otherlv_15, grammarAccess.getDependentPropertyAccess().getEquivalentToKeyword_9_0());
			}
			otherlv_16='('
			{
				newLeafNode(otherlv_16, grammarAccess.getDependentPropertyAccess().getLeftParenthesisKeyword_9_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDependentPropertyRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDependentPropertyAccess().getEquivalentToPropertyDefinitionCrossReference_9_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_18=','
				{
					newLeafNode(otherlv_18, grammarAccess.getDependentPropertyAccess().getCommaKeyword_9_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDependentPropertyRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getDependentPropertyAccess().getEquivalentToPropertyDefinitionCrossReference_9_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_20=')'
			{
				newLeafNode(otherlv_20, grammarAccess.getDependentPropertyAccess().getRightParenthesisKeyword_9_4());
			}
		)?
		(
			otherlv_21='inverseOf'
			{
				newLeafNode(otherlv_21, grammarAccess.getDependentPropertyAccess().getInverseOfKeyword_10_0());
			}
			otherlv_22='('
			{
				newLeafNode(otherlv_22, grammarAccess.getDependentPropertyAccess().getLeftParenthesisKeyword_10_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDependentPropertyRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDependentPropertyAccess().getInverseOfPropertyDefinitionCrossReference_10_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_24=','
				{
					newLeafNode(otherlv_24, grammarAccess.getDependentPropertyAccess().getCommaKeyword_10_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDependentPropertyRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getDependentPropertyAccess().getInverseOfPropertyDefinitionCrossReference_10_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_26=')'
			{
				newLeafNode(otherlv_26, grammarAccess.getDependentPropertyAccess().getRightParenthesisKeyword_10_4());
			}
		)?
		(
			otherlv_27='domain'
			{
				newLeafNode(otherlv_27, grammarAccess.getDependentPropertyAccess().getDomainKeyword_11_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDependentPropertyRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDependentPropertyAccess().getDomainClassDefinitionCrossReference_11_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_29='dependsOn'
		{
			newLeafNode(otherlv_29, grammarAccess.getDependentPropertyAccess().getDependsOnKeyword_12());
		}
		otherlv_30='('
		{
			newLeafNode(otherlv_30, grammarAccess.getDependentPropertyAccess().getLeftParenthesisKeyword_13());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDependentPropertyRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDependentPropertyAccess().getDependsOnPropertyDefinitionCrossReference_14_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_32=','
			{
				newLeafNode(otherlv_32, grammarAccess.getDependentPropertyAccess().getCommaKeyword_15_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDependentPropertyRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDependentPropertyAccess().getDependsOnPropertyDefinitionCrossReference_15_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_34=')'
		{
			newLeafNode(otherlv_34, grammarAccess.getDependentPropertyAccess().getRightParenthesisKeyword_16());
		}
		otherlv_35='}'
		{
			newLeafNode(otherlv_35, grammarAccess.getDependentPropertyAccess().getRightCurlyBracketKeyword_17());
		}
	)
;

// Entry rule entryRuleNotNumericType
entryRuleNotNumericType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotNumericTypeRule()); }
	iv_ruleNotNumericType=ruleNotNumericType
	{ $current=$iv_ruleNotNumericType.current; }
	EOF;

// Rule NotNumericType
ruleNotNumericType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='NotNumericType'
		{
			newLeafNode(otherlv_0, grammarAccess.getNotNumericTypeAccess().getNotNumericTypeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNotNumericTypeAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNotNumericTypeRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getNotNumericTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='basedOn'
		{
			newLeafNode(otherlv_3, grammarAccess.getNotNumericTypeAccess().getBasedOnKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNotNumericTypeAccess().getBasedOnPredefinedTypeEnumRuleCall_4_0());
				}
				lv_basedOn_4_0=rulePredefinedType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNotNumericTypeRule());
					}
					set(
						$current,
						"basedOn",
						lv_basedOn_4_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.PredefinedType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getNotNumericTypeAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleNumericType_Impl
entryRuleNumericType_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumericType_ImplRule()); }
	iv_ruleNumericType_Impl=ruleNumericType_Impl
	{ $current=$iv_ruleNumericType_Impl.current; }
	EOF;

// Rule NumericType_Impl
ruleNumericType_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='NumericType'
		{
			newLeafNode(otherlv_0, grammarAccess.getNumericType_ImplAccess().getNumericTypeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNumericType_ImplAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNumericType_ImplRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getNumericType_ImplAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='basedOn'
		{
			newLeafNode(otherlv_3, grammarAccess.getNumericType_ImplAccess().getBasedOnKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNumericType_ImplAccess().getBasedOnPredefinedTypeEnumRuleCall_4_0());
				}
				lv_basedOn_4_0=rulePredefinedType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNumericType_ImplRule());
					}
					set(
						$current,
						"basedOn",
						lv_basedOn_4_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.PredefinedType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getNumericType_ImplAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleMeasureType
entryRuleMeasureType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMeasureTypeRule()); }
	iv_ruleMeasureType=ruleMeasureType
	{ $current=$iv_ruleMeasureType.current; }
	EOF;

// Rule MeasureType
ruleMeasureType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MeasureType'
		{
			newLeafNode(otherlv_0, grammarAccess.getMeasureTypeAccess().getMeasureTypeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMeasureTypeAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMeasureTypeRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMeasureTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='basedOn'
		{
			newLeafNode(otherlv_3, grammarAccess.getMeasureTypeAccess().getBasedOnKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMeasureTypeAccess().getBasedOnPredefinedTypeEnumRuleCall_4_0());
				}
				lv_basedOn_4_0=rulePredefinedType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMeasureTypeRule());
					}
					set(
						$current,
						"basedOn",
						lv_basedOn_4_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.PredefinedType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='unit'
		{
			newLeafNode(otherlv_5, grammarAccess.getMeasureTypeAccess().getUnitKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMeasureTypeAccess().getUnitUnitTypeParserRuleCall_6_0());
				}
				lv_unit_6_0=ruleUnitType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMeasureTypeRule());
					}
					set(
						$current,
						"unit",
						lv_unit_6_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.UnitType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getMeasureTypeAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleCurrencyType
entryRuleCurrencyType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCurrencyTypeRule()); }
	iv_ruleCurrencyType=ruleCurrencyType
	{ $current=$iv_ruleCurrencyType.current; }
	EOF;

// Rule CurrencyType
ruleCurrencyType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CurrencyType'
		{
			newLeafNode(otherlv_0, grammarAccess.getCurrencyTypeAccess().getCurrencyTypeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCurrencyTypeAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCurrencyTypeRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCurrencyTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='basedOn'
		{
			newLeafNode(otherlv_3, grammarAccess.getCurrencyTypeAccess().getBasedOnKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCurrencyTypeAccess().getBasedOnPredefinedTypeEnumRuleCall_4_0());
				}
				lv_basedOn_4_0=rulePredefinedType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCurrencyTypeRule());
					}
					set(
						$current,
						"basedOn",
						lv_basedOn_4_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.PredefinedType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='currency'
		{
			newLeafNode(otherlv_5, grammarAccess.getCurrencyTypeAccess().getCurrencyKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCurrencyTypeAccess().getCurrencyPredefinedCurrencyEnumRuleCall_6_0());
				}
				lv_currency_6_0=rulePredefinedCurrency
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCurrencyTypeRule());
					}
					set(
						$current,
						"currency",
						lv_currency_6_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.PredefinedCurrency");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getCurrencyTypeAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleClassType
entryRuleClassType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassTypeRule()); }
	iv_ruleClassType=ruleClassType
	{ $current=$iv_ruleClassType.current; }
	EOF;

// Rule ClassType
ruleClassType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ClassType'
		{
			newLeafNode(otherlv_0, grammarAccess.getClassTypeAccess().getClassTypeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClassTypeAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassTypeRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getClassTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='basedOn'
		{
			newLeafNode(otherlv_3, grammarAccess.getClassTypeAccess().getBasedOnKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassTypeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getClassTypeAccess().getBasedOnClassDefinitionCrossReference_4_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getClassTypeAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleCollectionType
entryRuleCollectionType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionTypeRule()); }
	iv_ruleCollectionType=ruleCollectionType
	{ $current=$iv_ruleCollectionType.current; }
	EOF;

// Rule CollectionType
ruleCollectionType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CollectionType'
		{
			newLeafNode(otherlv_0, grammarAccess.getCollectionTypeAccess().getCollectionTypeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectionTypeAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectionTypeRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCollectionTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='is'
		{
			newLeafNode(otherlv_3, grammarAccess.getCollectionTypeAccess().getIsKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectionTypeAccess().getIsPredefinedCollectionEnumRuleCall_4_0());
				}
				lv_is_4_0=rulePredefinedCollection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectionTypeRule());
					}
					set(
						$current,
						"is",
						lv_is_4_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.PredefinedCollection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='collectionOf'
		{
			newLeafNode(otherlv_5, grammarAccess.getCollectionTypeAccess().getCollectionOfKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCollectionTypeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getCollectionTypeAccess().getCollectionOfDataTypeDefinitionCrossReference_6_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getCollectionTypeAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleEnumeratedType
entryRuleEnumeratedType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumeratedTypeRule()); }
	iv_ruleEnumeratedType=ruleEnumeratedType
	{ $current=$iv_ruleEnumeratedType.current; }
	EOF;

// Rule EnumeratedType
ruleEnumeratedType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EnumeratedType'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumeratedTypeAccess().getEnumeratedTypeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumeratedTypeAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumeratedTypeRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEnumeratedTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='contains'
		{
			newLeafNode(otherlv_3, grammarAccess.getEnumeratedTypeAccess().getContainsKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getEnumeratedTypeAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumeratedTypeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getEnumeratedTypeAccess().getContainsSingleValueCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getEnumeratedTypeAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnumeratedTypeRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getEnumeratedTypeAccess().getContainsSingleValueCrossReference_6_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getEnumeratedTypeAccess().getRightParenthesisKeyword_7());
		}
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getEnumeratedTypeAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleNumberEnumeratedType
entryRuleNumberEnumeratedType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberEnumeratedTypeRule()); }
	iv_ruleNumberEnumeratedType=ruleNumberEnumeratedType
	{ $current=$iv_ruleNumberEnumeratedType.current; }
	EOF;

// Rule NumberEnumeratedType
ruleNumberEnumeratedType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='NumberEnumeratedType'
		{
			newLeafNode(otherlv_0, grammarAccess.getNumberEnumeratedTypeAccess().getNumberEnumeratedTypeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNumberEnumeratedTypeAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNumberEnumeratedTypeRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getNumberEnumeratedTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='contains'
		{
			newLeafNode(otherlv_3, grammarAccess.getNumberEnumeratedTypeAccess().getContainsKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getNumberEnumeratedTypeAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNumberEnumeratedTypeAccess().getContainsEIntParserRuleCall_5_0());
				}
				lv_contains_5_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNumberEnumeratedTypeRule());
					}
					add(
						$current,
						"contains",
						lv_contains_5_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getNumberEnumeratedTypeAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNumberEnumeratedTypeAccess().getContainsEIntParserRuleCall_6_1_0());
					}
					lv_contains_7_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNumberEnumeratedTypeRule());
						}
						add(
							$current,
							"contains",
							lv_contains_7_0,
							"fr.cs.ontoeventb.pivotmodel.DSL.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getNumberEnumeratedTypeAccess().getRightCurlyBracketKeyword_7());
		}
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getNumberEnumeratedTypeAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleNamedUnit_Impl
entryRuleNamedUnit_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNamedUnit_ImplRule()); }
	iv_ruleNamedUnit_Impl=ruleNamedUnit_Impl
	{ $current=$iv_ruleNamedUnit_Impl.current; }
	EOF;

// Rule NamedUnit_Impl
ruleNamedUnit_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNamedUnit_ImplAccess().getNamedUnitAction_0(),
					$current);
			}
		)
		otherlv_1='NamedUnit'
		{
			newLeafNode(otherlv_1, grammarAccess.getNamedUnit_ImplAccess().getNamedUnitKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getNamedUnit_ImplAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='exponent'
			{
				newLeafNode(otherlv_3, grammarAccess.getNamedUnit_ImplAccess().getExponentKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNamedUnit_ImplAccess().getExponentEIntParserRuleCall_3_1_0());
					}
					lv_exponent_4_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNamedUnit_ImplRule());
						}
						set(
							$current,
							"exponent",
							lv_exponent_4_0,
							"fr.cs.ontoeventb.pivotmodel.DSL.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getNamedUnit_ImplAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleDerivedUnit
entryRuleDerivedUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDerivedUnitRule()); }
	iv_ruleDerivedUnit=ruleDerivedUnit
	{ $current=$iv_ruleDerivedUnit.current; }
	EOF;

// Rule DerivedUnit
ruleDerivedUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DerivedUnit'
		{
			newLeafNode(otherlv_0, grammarAccess.getDerivedUnitAccess().getDerivedUnitKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDerivedUnitAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='derivedUnitElement'
		{
			newLeafNode(otherlv_2, grammarAccess.getDerivedUnitAccess().getDerivedUnitElementKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getDerivedUnitAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDerivedUnitAccess().getDerivedUnitElementDerivedUnitElementParserRuleCall_4_0());
				}
				lv_derivedUnitElement_4_0=ruleDerivedUnitElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDerivedUnitRule());
					}
					add(
						$current,
						"derivedUnitElement",
						lv_derivedUnitElement_4_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.DerivedUnitElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getDerivedUnitAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDerivedUnitAccess().getDerivedUnitElementDerivedUnitElementParserRuleCall_5_1_0());
					}
					lv_derivedUnitElement_6_0=ruleDerivedUnitElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDerivedUnitRule());
						}
						add(
							$current,
							"derivedUnitElement",
							lv_derivedUnitElement_6_0,
							"fr.cs.ontoeventb.pivotmodel.DSL.DerivedUnitElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getDerivedUnitAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getDerivedUnitAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleNonStandardUnit
entryRuleNonStandardUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNonStandardUnitRule()); }
	iv_ruleNonStandardUnit=ruleNonStandardUnit
	{ $current=$iv_ruleNonStandardUnit.current; }
	EOF;

// Rule NonStandardUnit
ruleNonStandardUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNonStandardUnitAccess().getNonStandardUnitAction_0(),
					$current);
			}
		)
		otherlv_1='NonStandardUnit'
		{
			newLeafNode(otherlv_1, grammarAccess.getNonStandardUnitAccess().getNonStandardUnitKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNonStandardUnitAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNonStandardUnitRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getNonStandardUnitAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='exponent'
			{
				newLeafNode(otherlv_4, grammarAccess.getNonStandardUnitAccess().getExponentKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNonStandardUnitAccess().getExponentEIntParserRuleCall_4_1_0());
					}
					lv_exponent_5_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNonStandardUnitRule());
						}
						set(
							$current,
							"exponent",
							lv_exponent_5_0,
							"fr.cs.ontoeventb.pivotmodel.DSL.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getNonStandardUnitAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleConversionBasedUnit
entryRuleConversionBasedUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConversionBasedUnitRule()); }
	iv_ruleConversionBasedUnit=ruleConversionBasedUnit
	{ $current=$iv_ruleConversionBasedUnit.current; }
	EOF;

// Rule ConversionBasedUnit
ruleConversionBasedUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ConversionBasedUnit'
		{
			newLeafNode(otherlv_0, grammarAccess.getConversionBasedUnitAccess().getConversionBasedUnitKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConversionBasedUnitAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConversionBasedUnitRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getConversionBasedUnitAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='exponent'
			{
				newLeafNode(otherlv_3, grammarAccess.getConversionBasedUnitAccess().getExponentKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConversionBasedUnitAccess().getExponentEIntParserRuleCall_3_1_0());
					}
					lv_exponent_4_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConversionBasedUnitRule());
						}
						set(
							$current,
							"exponent",
							lv_exponent_4_0,
							"fr.cs.ontoeventb.pivotmodel.DSL.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='valueComponent'
		{
			newLeafNode(otherlv_5, grammarAccess.getConversionBasedUnitAccess().getValueComponentKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConversionBasedUnitAccess().getValueComponentEIntParserRuleCall_5_0());
				}
				lv_valueComponent_6_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConversionBasedUnitRule());
					}
					set(
						$current,
						"valueComponent",
						lv_valueComponent_6_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='unitComponent'
		{
			newLeafNode(otherlv_7, grammarAccess.getConversionBasedUnitAccess().getUnitComponentKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConversionBasedUnitRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getConversionBasedUnitAccess().getUnitComponentUnitTypeCrossReference_7_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getConversionBasedUnitAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleContextDependentUnit
entryRuleContextDependentUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContextDependentUnitRule()); }
	iv_ruleContextDependentUnit=ruleContextDependentUnit
	{ $current=$iv_ruleContextDependentUnit.current; }
	EOF;

// Rule ContextDependentUnit
ruleContextDependentUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getContextDependentUnitAccess().getContextDependentUnitAction_0(),
					$current);
			}
		)
		otherlv_1='ContextDependentUnit'
		{
			newLeafNode(otherlv_1, grammarAccess.getContextDependentUnitAccess().getContextDependentUnitKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContextDependentUnitAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContextDependentUnitRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getContextDependentUnitAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='exponent'
			{
				newLeafNode(otherlv_4, grammarAccess.getContextDependentUnitAccess().getExponentKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getContextDependentUnitAccess().getExponentEIntParserRuleCall_4_1_0());
					}
					lv_exponent_5_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContextDependentUnitRule());
						}
						set(
							$current,
							"exponent",
							lv_exponent_5_0,
							"fr.cs.ontoeventb.pivotmodel.DSL.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getContextDependentUnitAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleStandardUnit
entryRuleStandardUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStandardUnitRule()); }
	iv_ruleStandardUnit=ruleStandardUnit
	{ $current=$iv_ruleStandardUnit.current; }
	EOF;

// Rule StandardUnit
ruleStandardUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='StandardUnit'
		{
			newLeafNode(otherlv_0, grammarAccess.getStandardUnitAccess().getStandardUnitKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getStandardUnitAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='exponent'
			{
				newLeafNode(otherlv_2, grammarAccess.getStandardUnitAccess().getExponentKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStandardUnitAccess().getExponentEIntParserRuleCall_2_1_0());
					}
					lv_exponent_3_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStandardUnitRule());
						}
						set(
							$current,
							"exponent",
							lv_exponent_3_0,
							"fr.cs.ontoeventb.pivotmodel.DSL.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='prefix'
			{
				newLeafNode(otherlv_4, grammarAccess.getStandardUnitAccess().getPrefixKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStandardUnitAccess().getPrefixPrefixeTypeEnumRuleCall_3_1_0());
					}
					lv_prefix_5_0=rulePrefixeType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStandardUnitRule());
						}
						set(
							$current,
							"prefix",
							lv_prefix_5_0,
							"fr.cs.ontoeventb.pivotmodel.DSL.PrefixeType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='name'
		{
			newLeafNode(otherlv_6, grammarAccess.getStandardUnitAccess().getNameKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStandardUnitAccess().getNameUnitNameEnumRuleCall_5_0());
				}
				lv_name_7_0=ruleUnitName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStandardUnitRule());
					}
					set(
						$current,
						"name",
						lv_name_7_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.UnitName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getStandardUnitAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDerivedUnitElement
entryRuleDerivedUnitElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDerivedUnitElementRule()); }
	iv_ruleDerivedUnitElement=ruleDerivedUnitElement
	{ $current=$iv_ruleDerivedUnitElement.current; }
	EOF;

// Rule DerivedUnitElement
ruleDerivedUnitElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DerivedUnitElement'
		{
			newLeafNode(otherlv_0, grammarAccess.getDerivedUnitElementAccess().getDerivedUnitElementKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDerivedUnitElementAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDerivedUnitElementRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cs.ontoeventb.pivotmodel.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDerivedUnitElementAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='exponent'
			{
				newLeafNode(otherlv_3, grammarAccess.getDerivedUnitElementAccess().getExponentKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDerivedUnitElementAccess().getExponentEIntParserRuleCall_3_1_0());
					}
					lv_exponent_4_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDerivedUnitElementRule());
						}
						set(
							$current,
							"exponent",
							lv_exponent_4_0,
							"fr.cs.ontoeventb.pivotmodel.DSL.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='unit'
		{
			newLeafNode(otherlv_5, grammarAccess.getDerivedUnitElementAccess().getUnitKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDerivedUnitElementRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDerivedUnitElementAccess().getUnitNamedUnitCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getDerivedUnitElementAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Rule PredefinedType
rulePredefinedType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='INTEGER'
			{
				$current = grammarAccess.getPredefinedTypeAccess().getINTEGEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPredefinedTypeAccess().getINTEGEREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='NATURAL'
			{
				$current = grammarAccess.getPredefinedTypeAccess().getNATURALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPredefinedTypeAccess().getNATURALEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='BOOLEAN'
			{
				$current = grammarAccess.getPredefinedTypeAccess().getBOOLEANEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getPredefinedTypeAccess().getBOOLEANEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='STRING'
			{
				$current = grammarAccess.getPredefinedTypeAccess().getSTRINGEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getPredefinedTypeAccess().getSTRINGEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule PrefixeType
rulePrefixeType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='EXA'
			{
				$current = grammarAccess.getPrefixeTypeAccess().getEXAEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPrefixeTypeAccess().getEXAEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='PETA'
			{
				$current = grammarAccess.getPrefixeTypeAccess().getPETAEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPrefixeTypeAccess().getPETAEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='TERA'
			{
				$current = grammarAccess.getPrefixeTypeAccess().getTERAEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getPrefixeTypeAccess().getTERAEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='GIGA'
			{
				$current = grammarAccess.getPrefixeTypeAccess().getGIGAEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getPrefixeTypeAccess().getGIGAEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='MEGA'
			{
				$current = grammarAccess.getPrefixeTypeAccess().getMEGAEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getPrefixeTypeAccess().getMEGAEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='KILO'
			{
				$current = grammarAccess.getPrefixeTypeAccess().getKILOEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getPrefixeTypeAccess().getKILOEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='HECTO'
			{
				$current = grammarAccess.getPrefixeTypeAccess().getHECTOEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getPrefixeTypeAccess().getHECTOEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='DECA'
			{
				$current = grammarAccess.getPrefixeTypeAccess().getDECAEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getPrefixeTypeAccess().getDECAEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='DECI'
			{
				$current = grammarAccess.getPrefixeTypeAccess().getDECIEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getPrefixeTypeAccess().getDECIEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='CENTI'
			{
				$current = grammarAccess.getPrefixeTypeAccess().getCENTIEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getPrefixeTypeAccess().getCENTIEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='MILLI'
			{
				$current = grammarAccess.getPrefixeTypeAccess().getMILLIEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getPrefixeTypeAccess().getMILLIEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='MICRO'
			{
				$current = grammarAccess.getPrefixeTypeAccess().getMICROEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getPrefixeTypeAccess().getMICROEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='NANO'
			{
				$current = grammarAccess.getPrefixeTypeAccess().getNANOEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getPrefixeTypeAccess().getNANOEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13='PICO'
			{
				$current = grammarAccess.getPrefixeTypeAccess().getPICOEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getPrefixeTypeAccess().getPICOEnumLiteralDeclaration_13());
			}
		)
		    |
		(
			enumLiteral_14='FEMTO'
			{
				$current = grammarAccess.getPrefixeTypeAccess().getFEMTOEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_14, grammarAccess.getPrefixeTypeAccess().getFEMTOEnumLiteralDeclaration_14());
			}
		)
		    |
		(
			enumLiteral_15='ATTO'
			{
				$current = grammarAccess.getPrefixeTypeAccess().getATTOEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_15, grammarAccess.getPrefixeTypeAccess().getATTOEnumLiteralDeclaration_15());
			}
		)
	)
;

// Rule UnitName
ruleUnitName returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='METRE'
			{
				$current = grammarAccess.getUnitNameAccess().getMETREEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getUnitNameAccess().getMETREEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='GRAM'
			{
				$current = grammarAccess.getUnitNameAccess().getGRAMEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getUnitNameAccess().getGRAMEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='SECOND'
			{
				$current = grammarAccess.getUnitNameAccess().getSECONDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getUnitNameAccess().getSECONDEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='AMPERE'
			{
				$current = grammarAccess.getUnitNameAccess().getAMPEREEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getUnitNameAccess().getAMPEREEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='KELVIN'
			{
				$current = grammarAccess.getUnitNameAccess().getKELVINEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getUnitNameAccess().getKELVINEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='MOLE'
			{
				$current = grammarAccess.getUnitNameAccess().getMOLEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getUnitNameAccess().getMOLEEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='CANDELA'
			{
				$current = grammarAccess.getUnitNameAccess().getCANDELAEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getUnitNameAccess().getCANDELAEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='RADIAN'
			{
				$current = grammarAccess.getUnitNameAccess().getRADIANEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getUnitNameAccess().getRADIANEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='STERADIAN'
			{
				$current = grammarAccess.getUnitNameAccess().getSTERADIANEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getUnitNameAccess().getSTERADIANEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='HERTZ'
			{
				$current = grammarAccess.getUnitNameAccess().getHERTZEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getUnitNameAccess().getHERTZEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='NEWTON'
			{
				$current = grammarAccess.getUnitNameAccess().getNEWTONEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getUnitNameAccess().getNEWTONEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='PASCAL'
			{
				$current = grammarAccess.getUnitNameAccess().getPASCALEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getUnitNameAccess().getPASCALEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='JOULE'
			{
				$current = grammarAccess.getUnitNameAccess().getJOULEEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getUnitNameAccess().getJOULEEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13='WATT'
			{
				$current = grammarAccess.getUnitNameAccess().getWATTEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getUnitNameAccess().getWATTEnumLiteralDeclaration_13());
			}
		)
		    |
		(
			enumLiteral_14='COULOMB'
			{
				$current = grammarAccess.getUnitNameAccess().getCOULOMBEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_14, grammarAccess.getUnitNameAccess().getCOULOMBEnumLiteralDeclaration_14());
			}
		)
		    |
		(
			enumLiteral_15='VOLT'
			{
				$current = grammarAccess.getUnitNameAccess().getVOLTEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_15, grammarAccess.getUnitNameAccess().getVOLTEnumLiteralDeclaration_15());
			}
		)
		    |
		(
			enumLiteral_16='FARAD'
			{
				$current = grammarAccess.getUnitNameAccess().getFARADEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_16, grammarAccess.getUnitNameAccess().getFARADEnumLiteralDeclaration_16());
			}
		)
		    |
		(
			enumLiteral_17='OHM'
			{
				$current = grammarAccess.getUnitNameAccess().getOHMEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_17, grammarAccess.getUnitNameAccess().getOHMEnumLiteralDeclaration_17());
			}
		)
		    |
		(
			enumLiteral_18='SIEMENS'
			{
				$current = grammarAccess.getUnitNameAccess().getSIEMENSEnumLiteralDeclaration_18().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_18, grammarAccess.getUnitNameAccess().getSIEMENSEnumLiteralDeclaration_18());
			}
		)
		    |
		(
			enumLiteral_19='WEBER'
			{
				$current = grammarAccess.getUnitNameAccess().getWEBEREnumLiteralDeclaration_19().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_19, grammarAccess.getUnitNameAccess().getWEBEREnumLiteralDeclaration_19());
			}
		)
		    |
		(
			enumLiteral_20='TESLA'
			{
				$current = grammarAccess.getUnitNameAccess().getTESLAEnumLiteralDeclaration_20().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_20, grammarAccess.getUnitNameAccess().getTESLAEnumLiteralDeclaration_20());
			}
		)
		    |
		(
			enumLiteral_21='HENRY'
			{
				$current = grammarAccess.getUnitNameAccess().getHENRYEnumLiteralDeclaration_21().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_21, grammarAccess.getUnitNameAccess().getHENRYEnumLiteralDeclaration_21());
			}
		)
		    |
		(
			enumLiteral_22='DEGREE_CELSIUS'
			{
				$current = grammarAccess.getUnitNameAccess().getDEGREE_CELSIUSEnumLiteralDeclaration_22().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_22, grammarAccess.getUnitNameAccess().getDEGREE_CELSIUSEnumLiteralDeclaration_22());
			}
		)
		    |
		(
			enumLiteral_23='LUMEN'
			{
				$current = grammarAccess.getUnitNameAccess().getLUMENEnumLiteralDeclaration_23().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_23, grammarAccess.getUnitNameAccess().getLUMENEnumLiteralDeclaration_23());
			}
		)
		    |
		(
			enumLiteral_24='LUX'
			{
				$current = grammarAccess.getUnitNameAccess().getLUXEnumLiteralDeclaration_24().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_24, grammarAccess.getUnitNameAccess().getLUXEnumLiteralDeclaration_24());
			}
		)
		    |
		(
			enumLiteral_25='BECQUEREL'
			{
				$current = grammarAccess.getUnitNameAccess().getBECQUERELEnumLiteralDeclaration_25().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_25, grammarAccess.getUnitNameAccess().getBECQUERELEnumLiteralDeclaration_25());
			}
		)
		    |
		(
			enumLiteral_26='GRAY'
			{
				$current = grammarAccess.getUnitNameAccess().getGRAYEnumLiteralDeclaration_26().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_26, grammarAccess.getUnitNameAccess().getGRAYEnumLiteralDeclaration_26());
			}
		)
		    |
		(
			enumLiteral_27='SIEVERT'
			{
				$current = grammarAccess.getUnitNameAccess().getSIEVERTEnumLiteralDeclaration_27().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_27, grammarAccess.getUnitNameAccess().getSIEVERTEnumLiteralDeclaration_27());
			}
		)
	)
;

// Rule PredefinedCurrency
rulePredefinedCurrency returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='EUR'
			{
				$current = grammarAccess.getPredefinedCurrencyAccess().getEUREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPredefinedCurrencyAccess().getEUREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='USD'
			{
				$current = grammarAccess.getPredefinedCurrencyAccess().getUSDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPredefinedCurrencyAccess().getUSDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='SUR'
			{
				$current = grammarAccess.getPredefinedCurrencyAccess().getSUREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getPredefinedCurrencyAccess().getSUREnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='JPY'
			{
				$current = grammarAccess.getPredefinedCurrencyAccess().getJPYEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getPredefinedCurrencyAccess().getJPYEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='CNY'
			{
				$current = grammarAccess.getPredefinedCurrencyAccess().getCNYEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getPredefinedCurrencyAccess().getCNYEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='CHF'
			{
				$current = grammarAccess.getPredefinedCurrencyAccess().getCHFEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getPredefinedCurrencyAccess().getCHFEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule PredefinedCollection
rulePredefinedCollection returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='ARRAY'
			{
				$current = grammarAccess.getPredefinedCollectionAccess().getARRAYEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPredefinedCollectionAccess().getARRAYEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='SET'
			{
				$current = grammarAccess.getPredefinedCollectionAccess().getSETEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPredefinedCollectionAccess().getSETEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='BAG'
			{
				$current = grammarAccess.getPredefinedCollectionAccess().getBAGEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getPredefinedCollectionAccess().getBAGEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='LIST'
			{
				$current = grammarAccess.getPredefinedCollectionAccess().getLISTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getPredefinedCollectionAccess().getLISTEnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
